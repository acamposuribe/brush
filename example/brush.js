!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).brush={})}(this,(function(t){"use strict";const e=Math.sqrt(3),i=.5*(e-1),s=(3-e)/6,n=t=>0|Math.floor(t),r=new Float64Array([1,1,-1,1,1,-1,-1,-1,1,0,-1,0,1,0,-1,0,0,1,0,-1,0,1,0,-1]);function o(t=Math.random){const e=function(t){const e=512,i=new Uint8Array(e);for(let t=0;t<e/2;t++)i[t]=t;for(let s=0;s<e/2-1;s++){const e=s+~~(t()*(256-s)),n=i[s];i[s]=i[e],i[e]=n}for(let t=256;t<e;t++)i[t]=i[t-256];return i}(t),o=new Float64Array(e).map((t=>r[t%12*2])),a=new Float64Array(e).map((t=>r[t%12*2+1]));return function(t,r){let c=0,l=0,h=0;const u=(t+r)*i,g=n(t+u),m=n(r+u),d=(g+m)*s,f=t-(g-d),x=r-(m-d);let p,y;f>x?(p=1,y=0):(p=0,y=1);const _=f-p+s,v=x-y+s,w=f-1+2*s,b=x-1+2*s,R=255&g,S=255&m;let A=.5-f*f-x*x;if(A>=0){const t=R+e[S];A*=A,c=A*A*(o[t]*f+a[t]*x)}let E=.5-_*_-v*v;if(E>=0){const t=R+p+e[S+y];E*=E,l=E*E*(o[t]*_+a[t]*v)}let P=.5-w*w-b*b;if(P>=0){const t=R+1+e[S+1];P*=P,h=P*P*(o[t]*w+a[t]*b)}return 70*(c+l+h)}}function a(t,e){let i=new c(t),s=()=>i.next();return s.double=()=>s()+11102230246251565e-32*(2097152*s()|0),s.int32=()=>4294967296*i.next()|0,s.quick=s,s}class c{constructor(t){null==t&&(t=+new Date);let e=4022871197;function i(t){t=String(t);for(let i=0;i<t.length;i++){e+=t.charCodeAt(i);let s=.02519603282416938*e;e=s>>>0,s-=e,s*=e,e=s>>>0,s-=e,e+=4294967296*s}return 2.3283064365386963e-10*(e>>>0)}this.c=1,this.s0=i(" "),this.s1=i(" "),this.s2=i(" "),this.s0-=i(t),this.s0<0&&(this.s0+=1),this.s1-=i(t),this.s1<0&&(this.s1+=1),this.s2-=i(t),this.s2<0&&(this.s2+=1)}next(){let{c:t,s0:e,s1:i,s2:s}=this,n=2091639*e+2.3283064365386963e-10*t;return this.s0=i,this.s1=s,this.s2=n-(this.c=0|n)}copy(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}}Worker.createURL=function(t){const e="function"==typeof t?t.toString():t,i=new Blob(["'use strict';\nself.onmessage ="+e],{type:"text/javascript"});return window.URL.createObjectURL(i)},Worker.create=function(t){return new Worker(Worker.createURL(t))};const l=()=>Worker.create((function(t){let e,i;const s={};function n(){let t=r();const e=i.createFramebuffer();return i.bindFramebuffer(i.FRAMEBUFFER,e),i.framebufferTexture2D(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,t,0),{texture:t,fbo:e}}function r(){const t=i.createTexture();return i.bindTexture(i.TEXTURE_2D,t),i.texStorage2D(i.TEXTURE_2D,1,i.RGBA8,e.width,e.height),t}function o(){return self.navigator&&/Safari/.test(self.navigator.userAgent)&&!/Chrome/.test(self.navigator.userAgent)}onmessage=async t=>{if(t.data.canvas)e=t.data.canvas,function(){i=e.getContext("webgl2");const t=((t,e,i)=>{const s=t.createProgram();for(let[n,r]of[[t.VERTEX_SHADER,e],[t.FRAGMENT_SHADER,i]]){const e=t.createShader(n);t.shaderSource(e,r),t.compileShader(e),t.attachShader(s,e)}return t.linkProgram(s),s})(i,"#version 300 es\n    out vec2 p;void main(){vec3 v=vec3(-1);v[gl_VertexID]=3.;gl_Position=vec4(p=v.xy,0,1);}","#version 300 es\n\n    precision highp float;\n\n    uniform vec4 u_addColor;\n    uniform bool u_isErase;\n    uniform float u_flip;\n    uniform bool u_isFBO;\n    uniform sampler2D u_source;\n    uniform sampler2D u_mask;\n\n    in vec2 p;\n\n    out vec4 outColor;\n\n    float rand(vec2 co, float a, float b, float c) {\n        return fract(sin(dot(co, vec2(a, b))) * c);\n    }\n\n    #ifndef SPECTRAL\n    #define SPECTRAL\n\n    const int SPECTRAL_SIZE = 38;\n    const float SPECTRAL_GAMMA = 2.4;\n    const float SPECTRAL_EPSILON = 0.0001;\n\n    float spectral_uncompand(float x) {\n    return (x < 0.04045) ? x / 12.92 : pow((x + 0.055) / 1.055, SPECTRAL_GAMMA);\n    }\n\n    float spectral_compand(float x) {\n    return (x < 0.0031308) ? x * 12.92 : 1.055 * pow(x, 1.0 / SPECTRAL_GAMMA) - 0.055;\n    }\n\n    vec3 spectral_srgb_to_linear(vec3 srgb) {\n        return vec3(spectral_uncompand(srgb[0]), spectral_uncompand(srgb[1]), spectral_uncompand(srgb[2]));\n    }\n\n    vec3 spectral_linear_to_srgb(vec3 lrgb) {\n        return clamp(vec3(spectral_compand(lrgb[0]), spectral_compand(lrgb[1]), spectral_compand(lrgb[2])), 0.0, 1.0);\n    }\n\n    void spectral_upsampling(vec3 lrgb, out float w, out float c, out float m, out float y, out float r, out float g, out float b) {\n        w = min(lrgb.r, min(lrgb.g, lrgb.b));\n\n        lrgb -= w;\n\n        c = min(lrgb.g, lrgb.b);\n        m = min(lrgb.r, lrgb.b);\n        y = min(lrgb.r, lrgb.g);\n        r = min(max(0., lrgb.r - lrgb.b), max(0., lrgb.r - lrgb.g));\n        g = min(max(0., lrgb.g - lrgb.b), max(0., lrgb.g - lrgb.r));\n        b = min(max(0., lrgb.b - lrgb.g), max(0., lrgb.b - lrgb.r));\n    }\n\n    void spectral_linear_to_reflectance(vec3 lrgb, inout float R[SPECTRAL_SIZE]) {\n        float w, c, m, y, r, g, b;\n        \n        spectral_upsampling(lrgb, w, c, m, y, r, g, b);\n        \n        R[0] = max(SPECTRAL_EPSILON, w + c * 0.96853629 + m * 0.51567122 + y * 0.02055257 + r * 0.03147571 + g * 0.49108579 + b * 0.97901834);\n        R[1] = max(SPECTRAL_EPSILON, w + c * 0.96855103 + m * 0.54015520 + y * 0.02059936 + r * 0.03146636 + g * 0.46944057 + b * 0.97901649);\n        R[2] = max(SPECTRAL_EPSILON, w + c * 0.96859338 + m * 0.62645502 + y * 0.02062723 + r * 0.03140624 + g * 0.40165780 + b * 0.97901118);\n        R[3] = max(SPECTRAL_EPSILON, w + c * 0.96877345 + m * 0.75595012 + y * 0.02073387 + r * 0.03119611 + g * 0.24490420 + b * 0.97892146);\n        R[4] = max(SPECTRAL_EPSILON, w + c * 0.96942204 + m * 0.92826996 + y * 0.02114202 + r * 0.03053888 + g * 0.06826880 + b * 0.97858555);\n        R[5] = max(SPECTRAL_EPSILON, w + c * 0.97143709 + m * 0.97223624 + y * 0.02233154 + r * 0.02856855 + g * 0.02732883 + b * 0.97743705);\n        R[6] = max(SPECTRAL_EPSILON, w + c * 0.97541862 + m * 0.98616174 + y * 0.02556857 + r * 0.02459485 + g * 0.01360600 + b * 0.97428075);\n        R[7] = max(SPECTRAL_EPSILON, w + c * 0.98074186 + m * 0.98955255 + y * 0.03330189 + r * 0.01929520 + g * 0.01000187 + b * 0.96663223);\n        R[8] = max(SPECTRAL_EPSILON, w + c * 0.98580992 + m * 0.98676237 + y * 0.05185294 + r * 0.01423112 + g * 0.01284127 + b * 0.94822893);\n        R[9] = max(SPECTRAL_EPSILON, w + c * 0.98971194 + m * 0.97312575 + y * 0.10087639 + r * 0.01033111 + g * 0.02636635 + b * 0.89937713);\n        R[10] = max(SPECTRAL_EPSILON, w + c * 0.99238027 + m * 0.91944277 + y * 0.24000413 + r * 0.00765876 + g * 0.07058713 + b * 0.76070164);\n        R[11] = max(SPECTRAL_EPSILON, w + c * 0.99409844 + m * 0.32564851 + y * 0.53589066 + r * 0.00593693 + g * 0.70421692 + b * 0.46420440);\n        R[12] = max(SPECTRAL_EPSILON, w + c * 0.99517200 + m * 0.13820628 + y * 0.79874659 + r * 0.00485616 + g * 0.85473994 + b * 0.20123039);\n        R[13] = max(SPECTRAL_EPSILON, w + c * 0.99576545 + m * 0.05015143 + y * 0.91186529 + r * 0.00426186 + g * 0.95081565 + b * 0.08808402);\n        R[14] = max(SPECTRAL_EPSILON, w + c * 0.99593552 + m * 0.02912336 + y * 0.95399623 + r * 0.00409039 + g * 0.97170370 + b * 0.04592894);\n        R[15] = max(SPECTRAL_EPSILON, w + c * 0.99564041 + m * 0.02421691 + y * 0.97137099 + r * 0.00438375 + g * 0.97651888 + b * 0.02860373);\n        R[16] = max(SPECTRAL_EPSILON, w + c * 0.99464769 + m * 0.02660696 + y * 0.97939505 + r * 0.00537525 + g * 0.97429245 + b * 0.02060067);\n        R[17] = max(SPECTRAL_EPSILON, w + c * 0.99229579 + m * 0.03407586 + y * 0.98345207 + r * 0.00772962 + g * 0.97012917 + b * 0.01656701);\n        R[18] = max(SPECTRAL_EPSILON, w + c * 0.98638762 + m * 0.04835936 + y * 0.98553736 + r * 0.01366120 + g * 0.94258630 + b * 0.01451549);\n        R[19] = max(SPECTRAL_EPSILON, w + c * 0.96829712 + m * 0.00011720 + y * 0.98648905 + r * 0.03181352 + g * 0.99989207 + b * 0.01357964);\n        R[20] = max(SPECTRAL_EPSILON, w + c * 0.89228016 + m * 0.00008554 + y * 0.98674535 + r * 0.10791525 + g * 0.99989891 + b * 0.01331243);\n        R[21] = max(SPECTRAL_EPSILON, w + c * 0.53740239 + m * 0.85267882 + y * 0.98657555 + r * 0.46249516 + g * 0.13823139 + b * 0.01347661);\n        R[22] = max(SPECTRAL_EPSILON, w + c * 0.15360445 + m * 0.93188793 + y * 0.98611877 + r * 0.84604333 + g * 0.06968113 + b * 0.01387181);\n        R[23] = max(SPECTRAL_EPSILON, w + c * 0.05705719 + m * 0.94810268 + y * 0.98559942 + r * 0.94275572 + g * 0.05628787 + b * 0.01435472);\n        R[24] = max(SPECTRAL_EPSILON, w + c * 0.03126539 + m * 0.94200977 + y * 0.98507063 + r * 0.96860996 + g * 0.06111561 + b * 0.01479836);\n        R[25] = max(SPECTRAL_EPSILON, w + c * 0.02205445 + m * 0.91478045 + y * 0.98460039 + r * 0.97783966 + g * 0.08987709 + b * 0.01515250);\n        R[26] = max(SPECTRAL_EPSILON, w + c * 0.01802271 + m * 0.87065445 + y * 0.98425301 + r * 0.98187757 + g * 0.13656016 + b * 0.01540513);\n        R[27] = max(SPECTRAL_EPSILON, w + c * 0.01613460 + m * 0.78827548 + y * 0.98403909 + r * 0.98377315 + g * 0.22169624 + b * 0.01557233);\n        R[28] = max(SPECTRAL_EPSILON, w + c * 0.01520947 + m * 0.65738359 + y * 0.98388535 + r * 0.98470202 + g * 0.32176956 + b * 0.01565710);\n        R[29] = max(SPECTRAL_EPSILON, w + c * 0.01475977 + m * 0.59909403 + y * 0.98376116 + r * 0.98515481 + g * 0.36157329 + b * 0.01571025);\n        R[30] = max(SPECTRAL_EPSILON, w + c * 0.01454263 + m * 0.56817268 + y * 0.98368246 + r * 0.98537114 + g * 0.48361920 + b * 0.01571916);\n        R[31] = max(SPECTRAL_EPSILON, w + c * 0.01444459 + m * 0.54031997 + y * 0.98365023 + r * 0.98546685 + g * 0.46488579 + b * 0.01572133);\n        R[32] = max(SPECTRAL_EPSILON, w + c * 0.01439897 + m * 0.52110241 + y * 0.98361309 + r * 0.98550011 + g * 0.47440306 + b * 0.01572502);\n        R[33] = max(SPECTRAL_EPSILON, w + c * 0.01437620 + m * 0.51041094 + y * 0.98357259 + r * 0.98551031 + g * 0.48576990 + b * 0.01571717);\n        R[34] = max(SPECTRAL_EPSILON, w + c * 0.01436343 + m * 0.50526577 + y * 0.98353856 + r * 0.98550741 + g * 0.49267971 + b * 0.01571905);\n        R[35] = max(SPECTRAL_EPSILON, w + c * 0.01435687 + m * 0.50255080 + y * 0.98351247 + r * 0.98551323 + g * 0.49625685 + b * 0.01571059);\n        R[36] = max(SPECTRAL_EPSILON, w + c * 0.01435370 + m * 0.50126452 + y * 0.98350101 + r * 0.98551563 + g * 0.49807754 + b * 0.01569728);\n        R[37] = max(SPECTRAL_EPSILON, w + c * 0.01435408 + m * 0.50083021 + y * 0.98350852 + r * 0.98551547 + g * 0.49889859 + b * 0.01570020);\n    }\n\n    vec3 spectral_xyz_to_srgb(vec3 xyz) {\n        mat3 XYZ_RGB;\n\n        XYZ_RGB[0] = vec3( 3.24306333, -1.53837619, -0.49893282);\n        XYZ_RGB[1] = vec3(-0.96896309,  1.87542451,  0.04154303);\n        XYZ_RGB[2] = vec3( 0.05568392, -0.20417438,  1.05799454);\n        \n        float r = dot(XYZ_RGB[0], xyz);\n        float g = dot(XYZ_RGB[1], xyz);\n        float b = dot(XYZ_RGB[2], xyz);\n\n        return spectral_linear_to_srgb(vec3(r, g, b));\n    }\n\n    vec3 spectral_reflectance_to_xyz(float R[SPECTRAL_SIZE]) {\n        vec3 xyz = vec3(0.0);\n        \n        xyz +=  R[0] * vec3(0.00006469, 0.00000184, 0.00030502);\n        xyz +=  R[1] * vec3(0.00021941, 0.00000621, 0.00103681);\n        xyz +=  R[2] * vec3(0.00112057, 0.00003101, 0.00531314);\n        xyz +=  R[3] * vec3(0.00376661, 0.00010475, 0.01795439);\n        xyz +=  R[4] * vec3(0.01188055, 0.00035364, 0.05707758);\n        xyz +=  R[5] * vec3(0.02328644, 0.00095147, 0.11365162);\n        xyz +=  R[6] * vec3(0.03455942, 0.00228226, 0.17335873);\n        xyz +=  R[7] * vec3(0.03722379, 0.00420733, 0.19620658);\n        xyz +=  R[8] * vec3(0.03241838, 0.00668880, 0.18608237);\n        xyz +=  R[9] * vec3(0.02123321, 0.00988840, 0.13995048);\n        xyz += R[10] * vec3(0.01049099, 0.01524945, 0.08917453);\n        xyz += R[11] * vec3(0.00329584, 0.02141831, 0.04789621);\n        xyz += R[12] * vec3(0.00050704, 0.03342293, 0.02814563);\n        xyz += R[13] * vec3(0.00094867, 0.05131001, 0.01613766);\n        xyz += R[14] * vec3(0.00627372, 0.07040208, 0.00775910);\n        xyz += R[15] * vec3(0.01686462, 0.08783871, 0.00429615);\n        xyz += R[16] * vec3(0.02868965, 0.09424905, 0.00200551);\n        xyz += R[17] * vec3(0.04267481, 0.09795667, 0.00086147);\n        xyz += R[18] * vec3(0.05625475, 0.09415219, 0.00036904);\n        xyz += R[19] * vec3(0.06947040, 0.08678102, 0.00019143);\n        xyz += R[20] * vec3(0.08305315, 0.07885653, 0.00014956);\n        xyz += R[21] * vec3(0.08612610, 0.06352670, 0.00009231);\n        xyz += R[22] * vec3(0.09046614, 0.05374142, 0.00006813);\n        xyz += R[23] * vec3(0.08500387, 0.04264606, 0.00002883);\n        xyz += R[24] * vec3(0.07090667, 0.03161735, 0.00001577);\n        xyz += R[25] * vec3(0.05062889, 0.02088521, 0.00000394);\n        xyz += R[26] * vec3(0.03547396, 0.01386011, 0.00000158);\n        xyz += R[27] * vec3(0.02146821, 0.00810264, 0.00000000);\n        xyz += R[28] * vec3(0.01251646, 0.00463010, 0.00000000);\n        xyz += R[29] * vec3(0.00680458, 0.00249138, 0.00000000);\n        xyz += R[30] * vec3(0.00346457, 0.00125930, 0.00000000);\n        xyz += R[31] * vec3(0.00149761, 0.00054165, 0.00000000);\n        xyz += R[32] * vec3(0.00076970, 0.00027795, 0.00000000);\n        xyz += R[33] * vec3(0.00040737, 0.00014711, 0.00000000);\n        xyz += R[34] * vec3(0.00016901, 0.00006103, 0.00000000);\n        xyz += R[35] * vec3(0.00009522, 0.00003439, 0.00000000);\n        xyz += R[36] * vec3(0.00004903, 0.00001771, 0.00000000);\n        xyz += R[37] * vec3(0.00002000, 0.00000722, 0.00000000);\n\n        return xyz;\n    }\n\n    float spectral_linear_to_concentration(float l1, float l2, float t) {\n        float t1 = l1 * pow(1.0 - t, 2.0);\n        float t2 = l2 * pow(t, 2.0);\n\n        return t2 / (t1 + t2);\n    }\n\n    vec3 spectral_mix(vec3 color1, vec3 color2, float t) {\n        vec3 lrgb1 = spectral_srgb_to_linear(color1);\n        vec3 lrgb2 = spectral_srgb_to_linear(color2);\n\n        float R1[SPECTRAL_SIZE];\n        float R2[SPECTRAL_SIZE];\n\n        spectral_linear_to_reflectance(lrgb1, R1);\n        spectral_linear_to_reflectance(lrgb2, R2);\n\n        float l1 = spectral_reflectance_to_xyz(R1)[1];\n        float l2 = spectral_reflectance_to_xyz(R2)[1];\n\n        t = spectral_linear_to_concentration(l1, l2, t);\n\n        float R[SPECTRAL_SIZE];\n\n        for (int i = 0; i < SPECTRAL_SIZE; i++) {\n        float KS = (1.0 - t) * (pow(1.0 - R1[i], 2.0) / (2.0 * R1[i])) + t * (pow(1.0 - R2[i], 2.0) / (2.0 * R2[i]));\n        float KM = 1.0 + KS - sqrt(pow(KS, 2.0) + 2.0 * KS);\n\n        R[i] = KM;\n        }\n\n        return spectral_xyz_to_srgb(spectral_reflectance_to_xyz(R));\n    }\n\n    #endif\n\n    void main(void) {\n        vec2 uv = .5 * vec2(p.x, u_flip * p.y) + .5;\n        vec4 source = texture(u_source, uv);\n\n        if (u_isFBO) {\n            outColor = source;\n        } else {\n            vec4 maskColor = texture(u_mask, uv);\n            if (maskColor.r > 0.) {\n                vec2 r = vec2(12.9898,78.233), a = vec2(7.9898,58.233), l = vec2(17.9898,3.233); \n                float d = rand(uv, r.x, r.y, 43358.5453) * 2. - 1., x= rand(uv, a.x, a.y, 43213.5453) * 2. - 1., s=rand(uv, l.x, l.y, 33358.5453) * 2. - 1.;\n                vec4 pigment = vec4(u_addColor.xyz,1.0);\n\n                float darken_above = 0.7;\n                if (maskColor.a > darken_above && !u_isErase) {\n                    float blacken = 0.5 * (maskColor.a - darken_above);\n                    pigment = pigment * (1. - blacken) - vec4(0.5) * blacken;\n                }\n\n                    vec3 mixedColor = spectral_mix(source.xyz, pigment.xyz, maskColor.a);\n                    outColor = vec4(mixedColor + 0.002 * vec3(d,x,s), 1);\n                \n            } else {\n                outColor = source;\n            }\n        }        \n    }");let o=["u_flip","u_addColor","u_isErase","u_isFBO","u_source","u_mask","u_isImage"];for(let e of o)s[e]=i.getUniformLocation(t,e);i.useProgram(t),s.mask=r(),s.source=n(),s.target=n(),i.activeTexture(i.TEXTURE0),i.bindTexture(i.TEXTURE_2D,s.source.texture),i.activeTexture(i.TEXTURE1),i.bindTexture(i.TEXTURE_2D,s.mask),i.uniform1i(s.u_source,0),i.uniform1i(s.u_mask,1)}();else if(t.data.isBG)i.bindFramebuffer(i.DRAW_FRAMEBUFFER,s.source.fbo),i.clearColor(...t.data.color),i.clear(i.COLOR_BUFFER_BIT|i.DEPTH_BUFFER_BIT);else if(t.data.mask)!function(t){let n;if(o()){const e=new OffscreenCanvas(t.mask.width,t.mask.height).getContext("2d");e.drawImage(t.mask,0,0),n=e.getImageData(0,0,t.mask.width,t.mask.height)}i.texSubImage2D(i.TEXTURE_2D,0,0,0,i.RGBA,i.UNSIGNED_BYTE,o()?n:t.mask),t.mask.close(),i.bindFramebuffer(i.DRAW_FRAMEBUFFER,s.target.fbo),i.uniform1f(s.u_flip,1),i.uniform1i(s.u_isFBO,!1),i.uniform1i(s.u_isImage,!!t.isImage),t.isImage||(i.uniform1i(s.u_isImage,!1),i.uniform4f(s.u_addColor,...t.addColor),i.uniform1i(s.u_isErase,!!t.isErase)),i.drawArrays(i.TRIANGLES,0,3),i.bindFramebuffer(i.READ_FRAMEBUFFER,s.target.fbo),i.bindFramebuffer(i.DRAW_FRAMEBUFFER,s.source.fbo),i.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,i.COLOR_BUFFER_BIT,i.NEAREST),i.invalidateFramebuffer(i.READ_FRAMEBUFFER,[i.COLOR_ATTACHMENT0]),t.isLast&&!t.sp&&(i.bindFramebuffer(i.FRAMEBUFFER,null),i.uniform1i(s.u_isImage,!1),i.uniform1i(s.u_isFBO,!0),i.uniform1f(s.u_flip,-1),i.drawArrays(i.TRIANGLES,0,3))}(t.data);else if(t.data.get){let t=await createImageBitmap(e);postMessage({canvas:t},[t]),t.close()}}})),h={};let u,g,m,d,f=!1;function x(t,e){u=t,h[u]||(h[u]={},h[u].canvas=e),g=h[u].canvas.width,m=h[u].canvas.height,f||(f=!0,F.create()),I.load()}function p(){f||x()}let y=a(Math.random());let _=a(Math.random());t.noise=o(_);const v={random(t=0,e=1){return Array.isArray(t)?t[~~(y()*t.length)]:1===arguments.length?y()*t:v.rr(...arguments)},rr:(t=0,e=1)=>t+y()*(e-t),randInt:(t,e)=>~~v.rr(t,e),gaussian(t=0,e=1){const i=1-y(),s=y();return Math.sqrt(-2*Math.log(i))*this.cos(360*s)*e+t},pseudoGaussian:(t=0,e=1)=>t-2*e+(y()+y()+y())/3*e*4,weightedRand(t){let e,i,s=[];for(e in t)for(i=0;i<10*t[e];i++)s.push(e);let n=s[Math.floor(y()*s.length)];return isNaN(n)?n:parseInt(n)},map(t,e,i,s,n,r=!1){let o=s+(t-e)/(i-e)*(n-s);return r?s<n?this.constrain(o,s,n):this.constrain(o,n,s):o},constrain:(t,e,i)=>Math.max(Math.min(t,i),e),nAngle:t=>(t%=360)<0?t+360:t,cos(t){return this.c[~~(4*this.nAngle(t))]},sin(t){return this.s[~~(4*this.nAngle(t))]},isPrecalculationDone:!1,preCalculation(){if(this.isPrecalculationDone)return;const t=1440,e=2*Math.PI/t;this.c=new Float32Array(t),this.s=new Float32Array(t);for(let i=0;i<t;i++){const t=i*e;v.c[i]=Math.cos(t),v.s[i]=Math.sin(t)}this.isPrecalculationDone=!0},isNumber:t=>!isNaN(t),toDegrees:t=>{let e=180*t/Math.PI%360;return e<0?e+360:e},dist:(t,e,i,s)=>Math.sqrt((i-t)*(i-t)+(s-e)*(s-e)),calcAngle:(t,e,i,s)=>v.toDegrees(Math.atan2(-(s-e),i-t))};v.preCalculation();const w=v.random,b=v.weightedRand;function R(t,e,i,s,n=!1){let r=t.x,o=t.y,a=e.x,c=e.y,l=i.x,h=i.y,u=s.x,g=s.y;if(r===a&&o===c||l===u&&h===g)return!1;let m=a-r,d=c-o,f=u-l,x=g-h,p=x*m-f*d;if(0===p)return!1;let y=(f*(o-h)-x*(r-l))/p,_=(m*(o-h)-d*(r-l))/p;return!(!n&&(_<0||_>1))&&{x:r+y*m,y:o+y*d}}function S(t,e,i,s,n){let r=v.cos(n),o=v.sin(n);return{x:r*(i-t)+o*(s-e)+t,y:r*(s-e)-o*(i-t)+e}}const A={};function E(t){return t=new T(t),"rgb(255 0 0 / "}let P=document.createElement("canvas");P.width=1,P.height=1;let C=P.getContext("2d");class T{constructor(t,e,i){if(!this.g&&isNaN(t)){this.hex=this.standardize(t);let e=this.hexToRgb(this.hex);this.r=e.r,this.g=e.g,this.b=e.b}else this.r=t,this.g=e||t,this.b=i||t,this.hex=this.rgbToHex(this.r,this.g,this.b);this.gl=[this.r/255,this.g/255,this.b/255,1]}rgbToHex(t,e,i){return"#"+(1<<24|t<<16|e<<8|i).toString(16).slice(1)}hexToRgb(t){t=t.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,(function(t,e,i,s){return e+e+i+i+s+s}));let e=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);return e?{r:parseInt(e[1],16),g:parseInt(e[2],16),b:parseInt(e[3],16)}:null}standardize(t){return C.fillStyle=t,C.fillStyle}}const I={loaded:!1,isBlending:!1,currentColor:new T("white").gl,load(){if(!h[u].worker){let t=h[u];t.mask=new OffscreenCanvas(g,m),t.ctx=t.mask.getContext("2d"),t.ctx.lineWidth=0,t.offscreen=h[u].canvas.transferControlToOffscreen(),t.worker=l(),t.worker.postMessage("init"),t.worker.postMessage({canvas:t.offscreen},[t.offscreen])}this.mask=h[u].mask,this.ctx=h[u].ctx,this.worker=h[u].worker},blend(t=!1,e=!1,i=!1,s=!1){this.isBlending||t&&(this.currentColor=t.gl,this.isBlending=!0);let n,r=t?t.gl:this.currentColor;if(n=!(!e&&!i)||r.toString()!==this.currentColor.toString(),n){let n=i||this.mask.transferToImageBitmap();this.worker.postMessage({addColor:this.currentColor,mask:n,isLast:e,isErase:I.isErase,isImage:!!i,sp:s},[n]),this.isErase=!1,e||(this.currentColor=t.gl),e&&!s&&(this.isBlending=!1)}}};function L(){I.blend(!1,!0)}let M=new T("white");const k={x:0,y:0};function z(t){I.ctx.scale(t,t)}function O(t,e){p(),F.list.set(t,{gen:e}),F.current=t,F.refresh()}const F={list:new Map,isActive:!1,current:null,getState(){const{isActive:t,current:e}=this;return{isActive:t,current:e}},setState(t){Object.assign(this,t)},step_length:()=>Math.min(g,m)/1e3,create(){this.R=.01*g,this.left_x=-.5*g,this.top_y=-.5*m,this.num_columns=Math.round(2*g/this.R),this.num_rows=Math.round(2*m/this.R),this.addStandard(),B.genField()},flow_field(){return this.list.get(this.current).field},refresh(t=0){this.list.get(this.current).field=this.list.get(this.current).gen(t,this.genField())},genField(){let t=new Array(this.num_columns);for(let e=0;e<this.num_columns;e++)t[e]=new Float32Array(this.num_rows);return t},addStandard(){O("curved",(function(e,i){let s=v.randInt(-20,-10);v.randInt(0,100)%2==0&&(s*=-1);for(let n=0;n<F.num_columns;n++)for(let r=0;r<F.num_rows;r++){let o=t.noise(.01*n+.03*e,.01*r+.03*e),a=v.map(o,0,1,-s,s);i[n][r]=a}return i})),O("hand",(function(e,i){let s=v.rr(.2,.8),n=v.randInt(5,10);for(let r=0;r<F.num_columns;r++)for(let o=0;o<F.num_rows;o++){let a=v.randInt(15,25),c=n*v.sin(s*o*r+a),l=t.noise(.1*r+e,.1*o+e);i[r][o]=.5*c*v.cos(e)+l*c}return i})),O("seabed",(function(t,e){let i=v.rr(.4,.8),s=v.randInt(18,26);for(let n=0;n<F.num_columns;n++)for(let r=0;r<F.num_rows;r++){let o=v.randInt(15,20),a=s*v.sin(i*r*n+o);e[n][r]=1.1*a*v.cos(t)}return e}))}},B={genField(){this.resolution=.01*g,this.num_columns=Math.round(2*g/this.resolution),this.num_rows=Math.round(2*m/this.resolution),this.field=new Array(this.num_columns),this.fieldTemp=new Array(this.num_columns),this.brush=new Array(this.num_columns);for(let t=0;t<this.num_columns;t++)this.field[t]=new Float32Array(this.num_rows),this.fieldTemp[t]=new Float32Array(this.num_rows),this.brush[t]=new Float32Array(this.num_rows)},calc(t,e){const i=t+k.x-F.left_x,s=e+k.y-F.top_y;this.column_index=Math.round(i/this.resolution),this.row_index=Math.round(s/this.resolution)},get(t,e,i=!1){if(this.calc(t,e),this.isOut())return i||0;if(i){let t=this.field[this.column_index][this.row_index],e=Math.max(t,i);return this.fieldTemp[this.column_index][this.row_index]=Math.max(e,.75*this.fieldTemp[this.column_index][this.row_index]),e}return this.field[this.column_index][this.row_index]},isOut(){return this.column_index>=this.num_columns||this.column_index<0||this.row_index>=this.num_rows||this.row_index<0},gete(t,e){return this.calc(t,e),this.isOut()?0:this.brush[this.column_index][this.row_index]},update(){this.field=this.fieldTemp.slice()},increase(t,e){this.calc(t,e),this.isOut()||(this.brush[this.column_index][this.row_index]=v.rr(0,.5))}};class N{constructor(t,e){this.update(t,e),this.plotted=0}update(t,e){this.x=t,this.y=e,(F.isActive||wt.isActive)&&(this.x_offset=this.x+k.x-F.left_x,this.y_offset=this.y+k.y-F.top_y,this.column_index=Math.round(this.x_offset/F.R),this.row_index=Math.round(this.y_offset/F.R))}reset(){this.plotted=0}isIn(){return F.isActive?this.column_index>=0&&this.row_index>=0&&this.column_index<F.num_columns&&this.row_index<F.num_rows:this.isInCanvas()}isInCanvas(){let t=g,e=m,i=this.x+k.x,s=this.y+k.y;return i>=-.3*t&&i<=1.3*t&&s>=-.3*e&&s<=1.3*e}angle(){return this.isIn()&&F.isActive?F.flow_field()[this.column_index][this.row_index]:0}moveTo(t,e,i=X.spacing(),s=!0){if(this.isIn()){let n,r;s||(n=v.cos(-e),r=v.sin(-e));for(let o=0;o<t/i;o++){if(s){let t=this.angle();n=v.cos(t-e),r=v.sin(t-e)}let t=i*n,o=i*r;this.plotted+=i,this.update(this.x+t,this.y+o)}}else this.plotted+=i}plotTo(t,e,i,s){if(this.isIn()){const n=1/s;for(let s=0;s<e/i;s++){let e=this.angle(),s=t.angle(this.plotted),r=i*v.cos(e-s),o=i*v.sin(e-s);this.plotted+=i*n,this.update(this.x+r,this.y+o)}}else this.plotted+=i/z}}const D=2*Math.PI,X={isActive:!0,color:new T("black"),weight:1,clipWindow:null,type:"HB",list:new Map,getState(){const{isActive:t,type:e,color:i,weight:s,clipWindow:n}=this;return{isActive:t,type:e,color:i,weight:s,clipWindow:n}},setState(t){Object.assign(this,t)},add(t,e){e.type=["marker","custom","image","spray"].includes(e.type)?e.type:"default",this.list.set(t,{param:e,colors:[],buffers:[]})},box(){return[...this.list.keys()]},scaleBrushes(t){for(const{param:e}of this.list.values())e&&(e.weight*=t,e.vibration*=t,e.spacing*=t)},pick(t){this.list.has(t)&&(this.type=t)},strokeStyle(t,e,i){this.color=new T(...arguments),this.isActive=!0},lineWidth(t){this.weight=t},set(t,e,i=1){this.pick(t),this.strokeStyle(e),this.lineWidth(i)},noStroke(){this.isActive=!1},clip(t){this.clipWindow=t},noClip(){this.clipWindow=null},spacing(){const{param:t}=this.list.get(this.type)??{};return t?"default"===t.type||"spray"===t.type?t.spacing/this.weight:t.spacing:1},initializeDrawingState(t,e,i,s,n){this.position=new N(t,e),this.length=i,this.flow=s,this.plot=n,n&&n.calcIndex(0)},draw(t,e){e||(this.dir=t),this.saveState();const i=this.spacing(),s=Math.round(this.length*(e?t:1)/i);for(let n=0;n<s;n++)this.tip(),e?this.position.plotTo(this.plot,i,i,t):this.position.moveTo(i,t,i,this.flow);this.restoreState()},saveState(){const{param:t}=this.list.get(this.type)??{};if(!t)return;this.p=t;const{pressure:e}=t;this.a="custom"!==e.type?v.rr(-1,1):0,this.b="custom"!==e.type?v.rr(1,1.5):0,this.cp="custom"!==e.type?v.rr(3,3.5):v.rr(-.2,.2),[this.min,this.max]=e.min_max,I.blend(this.color),I.ctx.save(),this.markerTip(),this.alpha=this.calculateAlpha(),this.applyColor(this.alpha),I.ctx.beginPath()},restoreState(){I.ctx.fill(),this.markerTip(),I.ctx.restore()},tip(t=!1){if(!this.isInsideClippingArea())return;let e=t||this.calculatePressure();switch(e*=1-B.gete(this.position.x,this.position.y),this.p.type){case"spray":this.drawSpray(e);break;case"marker":this.drawMarker(e);break;case"custom":case"image":this.drawCustomOrImage(e,this.alpha);break;default:this.drawDefault(e)}},calculatePressure(){return this.plot?this.simPressure()*this.plot.pressure(this.position.plotted):this.simPressure()},simPressure(){return"custom"===this.p.pressure.type?v.map(this.p.pressure.curve(this.position.plotted/this.length)+this.cp,0,1,this.min,this.max,!0):this.gauss()},gauss(t=.5+this.p.pressure.curve[0]*this.a,e=1-this.p.pressure.curve[1]*this.b,i=this.cp,s=this.min,n=this.max){return v.map(1/(1+Math.pow(Math.abs((this.position.plotted-t*this.length)/(e*this.length/2)),2*i)),0,1,s,n)},calculateAlpha(){return["default","spray"].includes(this.p.type)?this.p.opacity:this.p.opacity/this.weight},applyColor(t){I.ctx.fillStyle=`${E(this.color)}${t}%)`},isInsideClippingArea(){if(this.clipWindow)return this.position.x>=this.clipWindow[0]&&this.position.x<=this.clipWindow[2]&&this.position.y>=this.clipWindow[1]&&this.position.y<=this.clipWindow[3];{let t=g,e=m,i=.05*g,s=this.position.x+k.x,n=this.position.y+k.y;return s>=-i&&s<=t+i&&n>=-i&&n<=e+i}},rect(t,e,i){const s=i/1.2;I.ctx.rect(t-s/2,e-s/2,s,s)},circle(t,e,i){const s=i/2;I.ctx.moveTo(t+s,e),I.ctx.arc(t,e,s,0,D)},drawSpray(t){const e=this.weight*this.p.vibration*t+this.weight*v.gaussian()*this.p.vibration/3,i=this.weight*v.rr(.9,1.1),s=Math.ceil(this.p.quality/t);for(let t=0;t<s;t++){const t=v.rr(.9,1.1),s=t*e*v.rr(-1,1),n=v.rr(-1,1),r=Math.sqrt((t*e)**2-s**2);this.rect(this.position.x+s,this.position.y+n*r,i)}},drawMarker(t,e=!0){const i=e?this.weight*this.p.vibration:0,s=e?i*v.rr(-1,1):0,n=e?i*v.rr(-1,1):0;this.circle(this.position.x+s,this.position.y+n,this.weight*this.p.weight*t)},drawCustomOrImage(t,e,i=!0){I.ctx.save();const s=i?this.weight*this.p.vibration:0,n=i?s*v.rr(-1,1):0,r=i?s*v.rr(-1,1):0;I.ctx.translate(this.position.x+n,this.position.y+r),this.adjustSizeAndRotation(this.weight*t,e),this.p.tip(I.ctx),I.ctx.restore()},drawDefault(t){const e=this.weight*this.p.vibration*(this.p.definition+(1-this.p.definition)*v.gaussian()*this.gauss(.5,.9,5,.2,1.2)/t);v.rr(0,this.p.quality*t)>.4&&this.rect(this.position.x+.7*e*v.rr(-1,1),this.position.y+e*v.rr(-1,1),t*this.p.weight*v.rr(.85,1.15))},adjustSizeAndRotation(t,e){I.ctx.scale(t,t);let i=0;"random"===this.p.rotate?i=v.randInt(0,D):"natural"===this.p.rotate&&(i=(this.plot?-this.plot.angle(this.position.plotted):-this.dir)+(this.flow?this.position.angle():0),i=i*Math.PI/180),I.ctx.rotate(i)},markerTip(){if(this.isInsideClippingArea()){let t=this.calculatePressure(),e=this.calculateAlpha(t);if(I.ctx.fillStyle=E(this.color)+e/3+"%)","marker"===this.p.type)for(let e=1;e<5;e++)I.ctx.beginPath(),this.drawMarker(t*e/5,!1),I.ctx.fill();else if("custom"===this.p.type||"image"===this.p.type)for(let i=1;i<5;i++)I.ctx.beginPath(),this.drawCustomOrImage(t*i/5,e,!1),I.ctx.fill()}}},Y=X.add.bind(X),U=X.box.bind(X),W=X.scaleBrushes.bind(X),G=X.pick.bind(X),Z=X.strokeStyle.bind(X),j=X.lineWidth.bind(X),q=X.set.bind(X),H=X.noStroke.bind(X),$=X.clip.bind(X),K=X.noClip.bind(X);function V(t,e,i,s){p();let n=v.dist(t,e,i,s);if(0==n)return;X.initializeDrawingState(t,e,n,!0,!1);let r=v.calcAngle(t,e,i,s);X.draw(r,!1)}function J(t=5,e=45,i={rand:!1,continuous:!1,gradient:!1}){tt.isActive=!0,tt.hatchingParams=[t,e,i]}function Q(t){if(t._boundingBox)return t._boundingBox;let e=1/0,i=1/0,s=-1/0,n=-1/0;for(let r=0;r<t.a.length;r++){const[o,a]=t.a[r];o<e&&(e=o),o>s&&(s=o),a<i&&(i=a),a>n&&(n=a)}return t._boundingBox={minX:e,minY:i,maxX:s,maxY:n},t._boundingBox}const tt={isActive:!1,hatchingParams:[5,45,{}],hatchingBrush:!1,getState(){const{isActive:t,hatchingParams:e,hatchingBrush:i}=this;return{isActive:t,hatchingParams:e,hatchingBrush:i}},setState(t){Object.assign(this,t)},hatch(t){let e=tt.hatchingParams[0],i=tt.hatchingParams[1],s=tt.hatchingParams[2],n=X.getState();tt.hatchingBrush&&q(tt.hatchingBrush[0],tt.hatchingBrush[1],tt.hatchingBrush[2]),i=v.toDegrees(i)%180,Array.isArray(t)||(t=[t]);const r=function(t){let e={minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0};for(let i of t){const t=Q(i);e.minX=Math.min(e.minX,t.minX),e.minY=Math.min(e.minY,t.minY),e.maxX=Math.max(e.maxX,t.maxX),e.maxY=Math.max(e.maxY,t.maxY)}return e}(t);let o=new it([[r.minX,r.minY],[r.maxX,r.minY],[r.maxX,r.maxY],[r.minX,r.maxY]]),a=i<=90&&i>=0?r.minY:r.maxY,c=s.gradient?v.map(s.gradient,0,1,1,1.1,!0):1,l=[],h=0,u=e,g=t=>({point1:{x:r.minX+u*t*v.cos(90-i),y:a+u*t*v.sin(90-i)},point2:{x:r.minX+u*t*v.cos(90-i)+v.cos(-i),y:a+u*t*v.sin(90-i)+v.sin(-i)}});for(;o.intersect(g(h)).length>0;){let e=[];for(let i of t)e.push(i.intersect(g(h)));l[h]=e.flat().sort(((t,e)=>t.x===e.x?t.y-e.y:t.x-e.x)),u*=c,h++}let m=[];for(let t of l)void 0!==t[0]&&m.push(t);let d=s.rand?s.rand:0;for(let t=0;t<m.length;t++){let i=m[t],n=t>0&&s.continuous;for(let s=0;s<i.length-1;s+=2)0!==d&&(i[s].x+=d*e*v.rr(-10,10),i[s].y+=d*e*v.rr(-10,10),i[s+1].x+=d*e*v.rr(-10,10),i[s+1].y+=d*e*v.rr(-10,10)),V(i[s].x,i[s].y,i[s+1].x,i[s+1].y),n&&V(m[t-1][1].x,m[t-1][1].y,i[s].x,i[s].y)}X.setState(n)}},et=tt.hatch;class it{constructor(t,e=!1){this.a=t,this.vertices=t.map((t=>({x:t[0],y:t[1]}))),e&&(this.vertices=t),this.sides=this.vertices.map(((t,e,i)=>[t,i[(e+1)%i.length]]))}intersect(t){let e=`${t.point1.x},${t.point1.y}-${t.point2.x},${t.point2.y}`;if(this._intersectionCache&&this._intersectionCache[e])return this._intersectionCache[e];let i=[];for(let e of this.sides){let s=R(t.point1,t.point2,e[0],e[1]);!1!==s&&i.push(s)}return this._intersectionCache||(this._intersectionCache={}),this._intersectionCache[e]=i,i}draw(t=!1,e,i){let s=X.isActive;if(t&&q(t,e,i),X.isActive){p();for(let t of this.sides)V(t[0].x,t[0].y,t[1].x,t[1].y)}X.isActive=s}fill(t=!1,e,i,s,n,r){let o=wt.isActive;t&&(yt(t,e),_t(i,r),vt(s,n)),wt.isActive&&(p(),wt.fill(this)),wt.isActive=o}hatch(t=!1,e,i){let s=tt.isActive;t&&J(t,e,i),tt.isActive&&(p(),tt.hatch(this)),tt.isActive=s}erase(t=!1,e=pt.a){(pt.isActive||t)&&(t=t?new T(t):pt.c,I.blend(t),I.isErase=!0,I.ctx.save(),I.ctx.fillStyle=E(t)+e+"%)",st(this.vertices),I.ctx.fill(),I.ctx.restore())}show(){this.fill(),this.hatch(),this.draw(),this.erase()}}function st(t){I.ctx.beginPath();for(let e=0;e<t.length;e++){let i=t[e];0==e?I.ctx.moveTo(i.x,i.y):I.ctx.lineTo(i.x,i.y)}}class nt{constructor(t){this.segments=[],this.angles=[],this.pres=[],this.type=t,this.dir=0,this.calcIndex(0),this.pol=!1}addSegment(t=0,e=0,i=1,s=!1){this.angles.length>0&&this.angles.splice(-1),t=s?(t%360+360)%360:v.toDegrees(t),this.angles.push(t),this.pres.push(i),this.segments.push(e),this.length=this.segments.reduce(((t,e)=>t+e),0),this.angles.push(t)}endPlot(t=0,e=1,i=!1){t=i?(t%360+360)%360:v.toDegrees(t),this.angles.splice(-1),this.angles.push(t),this.pres.push(e)}rotate(t){this.dir=v.toDegrees(t)}pressure(t){return t>this.length?this.pres[this.pres.length-1]:this.curving(this.pres,t)}angle(t){return t>this.length?this.angles[this.angles.length-1]:(this.calcIndex(t),"curve"===this.type?this.curving(this.angles,t)+this.dir:this.angles[this.index]+this.dir)}curving(t,e){let i=t[this.index],s=t[this.index+1];return void 0===s&&(s=i),Math.abs(s-i)>180&&(s>i?s=-(360-s):i=-(360-i)),v.map(e-this.suma,0,this.segments[this.index],i,s,!0)}calcIndex(t){this.index=-1,this.suma=0;let e=0;for(;e<=t;)this.suma=e,e+=this.segments[this.index+1],this.index++;return this.index}genPol(t,e,i=1,s=!1){p();const n=.5,r=[],o=Math.round(this.length/n),a=new N(t,e);let c=s?.15:3*wt.bleed_strength,l=0,h=0;for(let t=0;t<o;t++){a.plotTo(this,n,n,1);let t=this.calcIndex(a.plotted);l+=n,(l>=this.segments[t]*c*v.rr(.7,1.3)||t>=h)&&a.x&&(r.push([a.x,a.y]),l=0,t>=h&&h++)}return new it(r)}draw(t,e,i){X.isActive&&(p(),this.origin&&(t=this.origin[0],e=this.origin[1],i=1),function(t,e,i,s){p(),X.initializeDrawingState(e,i,t.length,!0,t),X.draw(s,!0)}(this,t,e,i))}fill(t,e,i){wt.isActive&&(p(),this.origin&&(t=this.origin[0],e=this.origin[1],i=1),this.pol=this.genPol(t,e,i),this.pol.fill())}hatch(t,e,i){tt.isActive&&(p(),this.origin&&(t=this.origin[0],e=this.origin[1],i=1),this.pol=this.genPol(t,e,i,!0),this.pol.hatch())}erase(t,e,i){pt.isActive&&(this.origin&&(t=this.origin[0],e=this.origin[1],i=1),this.pol=this.genPol(t,e,i,!0),I.blend(pt.c),I.isErase=!0,I.ctx.save(),I.ctx.fillStyle=E(pt.c)+pt.a+"%)",st(this.pol.vertices),I.ctx.fill(),I.ctx.restore())}show(t,e,i=1){this.draw(t,e,i),this.fill(t,e,i),this.hatch(t,e,i),this.erase(t,e,i)}}let rt,ot,at,ct,lt;class ht{constructor(){this.isClosed=!1,this.curvature=at,this.vert=[]}vertex(t,e,i){this.vert.push([t,e,i])}show(){xt(this.vert,this.curvature,this.isClosed).show()}}function ut(t=0){at=v.constrain(t,0,1),rt=[]}function gt(t,e,i=1){ot=new ht,rt.push(ot),ot.vertex(t,e,i)}function mt(t,e,i=1){ot.vertex(t,e,i)}function dt(){ot.vertex(...ot.vert[0]),ot.isClosed=!0}function ft(){for(let t of rt)t.show();rt=!1}function xt(t,e=.5,i=!1){let s=new nt(0===e?"segments":"curve");if(i&&0!==e&&t.push(t[1]),t&&t.length>0){let n,r,o,a=0;for(let c=0;c<t.length-1;c++)if(e>0&&c<t.length-2){let l=t[c],h=t[c+1],u=t[c+2],g=v.dist(l[0],l[1],h[0],h[1]),m=v.dist(h[0],h[1],u[0],u[1]),d=v.calcAngle(l[0],l[1],h[0],h[1]),f=v.calcAngle(h[0],h[1],u[0],u[1]),x=e*Math.min(Math.min(g,m),.5*Math.min(g,m)),p=Math.max(g,m),y=g-x,_=m-x;if(Math.floor(d)===Math.floor(f)){let e=i&&0===c?0:g-a,u=i?0===c?0:m-o:m;s.addSegment(d,e,l[2],!0),c===t.length-3&&s.addSegment(f,u,h[2],!0),a=0,0===c&&(n=g,o=x,r=t[1],a=0)}else{let e={x:h[0]-x*v.cos(-d),y:h[1]-x*v.sin(-d)},u={x:e.x+p*v.cos(90-d),y:e.y+p*v.sin(90-d)},g={x:h[0]+x*v.cos(-f),y:h[1]+x*v.sin(-f)},m=R(e,u,g,{x:g.x+p*v.cos(90-f),y:g.y+p*v.sin(90-f)},!0),w=v.dist(e.x,e.y,m.x,m.y),b=v.dist(e.x,e.y,g.x,g.y)/2,S=2*Math.asin(b/w)*(180/Math.PI),A=D*w*S/360,E=i&&0===c?0:y-a,P=c===t.length-3?i?n-x:_:0;s.addSegment(d,E,l[2],!0),s.addSegment(d,isNaN(A)?0:A,l[2],!0),s.addSegment(f,P,h[2],!0),a=x,0===c&&(n=y,o=x,r=[e.x,e.y])}c==t.length-3&&s.endPlot(f,h[2],!0)}else if(0===e){let e=t[c],i=t[c+1],n=v.dist(e[0],e[1],i[0],i[1]),r=v.calcAngle(e[0],e[1],i[0],i[1]);s.addSegment(r,n,i[2],!0),c==t.length-2&&s.endPlot(r,1,!0)}s.origin=i&&0!==e?r:t[0]}return s}const pt={};function yt(t,e,i,s){p(),wt.opacity=arguments.length<4?e:s,wt.color=arguments.length<3?new T(t):new T(t,e,i),wt.isActive=!0}function _t(t,e="out"){p(),wt.bleed_strength=v.constrain(t,0,1),wt.direction=e}function vt(t=.4,e=.4){p(),wt.texture_strength=v.constrain(t,0,1),wt.border_strength=v.constrain(e,0,1)}const wt={isActive:!1,color:new T("#002185"),opacity:60,bleed_strength:.07,texture_strength:.4,border_strength:.4,getState(){const{isActive:t,color:e,opacity:i,bleed_strength:s,texture_strength:n,border_strength:r}=this;return{isActive:t,color:e,opacity:i,bleed_strength:s,texture_strength:n,border_strength:r}},setState(t){Object.assign(this,t)},fill(t){this.polygon=t;let e=[...t.vertices];const i=e.length,s=.25*i*v.weightedRand({1:5,2:10,3:60}),n=this.bleed_strength;this.m=e.map(((t,e)=>{let i=v.rr(.85,1.2)*n;return e>s?i:.2*i}));let r=v.randInt(0,i);e=[...e.slice(r),...e.slice(0,r)],new bt(e,this.m,this.calcCenter(e),[],!0).fill(this.color,v.map(this.opacity,0,100,0,1,!0),this.texture_strength,!0)},calcCenter(t){var e=t[0],i=t[t.length-1];e.x==i.x&&e.y==i.y||t.push(e);for(var s,n,r,o=0,a=0,c=0,l=t.length,h=0,u=l-1;h<l;u=h++)s=t[h],n=t[u],o+=r=(s.y-e.y)*(n.x-e.x)-(n.y-e.y)*(s.x-e.x),a+=(s.x+n.x-2*e.x)*r,c+=(s.y+n.y-2*e.y)*r;return{x:a/(r=3*o)+e.x,y:c/r+e.y}}};class bt{constructor(t,e,i,s,n=!1){this.pol=new it(t,!0),this.v=t,this.dir=s,this.m=e,this.midP=i,this.size=-1/0,this.sizeX=-1/0,this.sizeY=-1/0;for(let t of this.v)this.sizeX=Math.max(v.dist(this.midP.x,0,t.x,0),this.sizeX),this.sizeY=Math.max(v.dist(this.midP.y,0,t.y,0),this.sizeY),this.size=Math.max(v.dist(this.midP.x,this.midP.y,t.x,t.y),this.size);if(n)for(let t=0;t<this.v.length;t++){const e=this.v[t],i=this.v[(t+1)%this.v.length],s={x:i.x-e.x,y:i.y-e.y},n=S(0,0,s.x,s.y,90);let r={point1:{x:e.x+s.x/2,y:e.y+s.y/2},point2:{x:e.x+s.x/2+n.x,y:e.y+s.y/2+n.y}};const o=(t,e,i)=>(e.x-t.x)*(i.y-t.y)-(e.y-t.y)*(i.x-t.x)>.01;let a=0;for(let t of wt.polygon.intersect(r))o(e,i,t)&&a++;this.dir[t]=a%2==0}}trim(t=1){let e=[...this.v],i=[...this.m],s=[...this.dir];if(this.v.length>8&&t>=0&&1!==t){let n=~~((1-t)*this.v.length),r=~~this.v.length/2-~~n/2;e.splice(r,n),i.splice(r,n),s.splice(r,n)}return{v:e,m:i,dir:s}}grow(t=1,e){const i=[],s=[],n=[],r=this.trim(t),o=r.v,a=r.m,c=r.dir,l=o.length,h=e?-.5:1,u="out"===wt.direction?-90:90;let g=!1;switch(t){case 999:g=v.rr(.2,.4);break;case 997:g=wt.bleed_strength/1.7}for(let t=0;t<l;t++){const e=o[t],r=o[(t+1)%l];let m=g||B.get(e.x,e.y,a[t]);m*=h;let d={x:r.x-e.x,y:r.y-e.y},f=(c[t]?u:-u)+45*v.rr(-.4,.4),x=S(0,0,d.x,d.y,f),p=v.constrain(v.gaussian(.5,.2),.1,.9),y=v.gaussian(.5,.2)*v.rr(.6,1.4)*m,_={x:e.x+d.x*p+x.x*y,y:e.y+d.y*p+x.y*y};i.push(e,_),s.push(a[t],a[t]+v.pseudoGaussian(0,.02)),n.push(c[t],c[t])}return new bt(i,s,this.midP,n)}fill(t,e,i){const s=3*i,n=1.5*e;I.blend(t),I.ctx.save(),I.ctx.fillStyle=E(t)+n+"%)",I.ctx.strokeStyle=E(this.color)+.008*wt.border_strength+")";let r,o=this.grow();for(let i=0;i<24;i++){i%4==0&&(o=o.grow()),r=[o.grow(1-.0125*i),o.grow(.7-.0125*i),o.grow(.4-.0125*i)];for(let t of r)t.grow(997).grow().layer(i);o.grow(.1).grow(999).layer(i),0!==s&&i%2==0&&o.erase(3*s,e),i%6==0&&I.blend(t,!0,!1,!0)}B.update(),I.ctx.restore()}layer(t){const e=Math.max(this.sizeX,this.sizeY);I.ctx.lineWidth=v.map(t,0,24,e/30,e/45,!0),st(this.v),I.ctx.stroke(),I.ctx.fill()}erase(t,e){I.ctx.save();const i=v.rr(40,60)*v.map(t,0,1,2,3),s=this.sizeX/2,n=this.sizeY/2,r=Math.min(this.sizeX,this.sizeY)*(1.4-wt.bleed_strength),o=.03*r,a=.25*r,c=this.midP.x,l=this.midP.y;I.ctx.globalCompositeOperation="destination-out";let h=(5-v.map(e,80,120,.3,2,!0))*t;I.ctx.fillStyle=E(this.color)+h/255+")",I.ctx.lineWidth=0;for(let t=0;t<i;t++){const e=c+v.gaussian(0,s),i=l+v.gaussian(0,n),r=v.rr(o,a);I.ctx.beginPath(),X.circle(e,i,r),t%4!=0&&I.ctx.fill(),Math.abs(e-c)<2*s&&Math.abs(i-l)<2*n&&B.increase(e,i)}I.ctx.globalCompositeOperation="source-over",I.ctx.restore()}}const Rt=["weight","vibration","definition","quality","opacity","spacing","pressure","type","tip","rotate"],St=[["pen",[.35,.12,.5,8,88,.3,{curve:[.15,.2],min_max:[1.4,.9]}]],["rotring",[.2,.05,.5,30,115,.15,{curve:[.35,.2],min_max:[1.3,.9]}]],["2B",[.35,.6,.1,8,140,.2,{curve:[.15,.2],min_max:[1.5,1]}]],["HB",[.3,.5,.4,4,130,.25,{curve:[.15,.2],min_max:[1.2,.9]}]],["2H",[.2,.4,.3,2,100,.2,{curve:[.15,.2],min_max:[1.2,.9]}]],["cpencil",[.4,.55,.8,7,70,.15,{curve:[.15,.2],min_max:[.95,1.2]}]],["charcoal",[.5,2,.8,300,70,.06,{curve:[.15,.2],min_max:[1.5,.8]}]],["spray",[.2,12,15,40,35,.65,{curve:[0,.1],min_max:[1,1]},"spray"]],["marker",[2.5,.12,null,null,25,.4,{curve:[.35,.25],min_max:[1.5,1]},"marker"]]];for(let t of St){let e={};for(let i=0;i<t[1].length;i++)e[Rt[i]]=t[1][i];Y(t[0],e)}let At,Et=0,Pt=!0,Ct=30;let Tt=t=>(t&&(Ct=t),Ct);function It(e){Pt&&(e>Et+1e3/Tt()||0===e)&&(Et=e,t.frameCount++,At(),L()),requestAnimationFrame(It)}t.frameCount=0,t.BleedField=B,t.Plot=nt,t.Polygon=it,t.Position=N,t.add=Y,t.addField=O,t.arc=function(t,e,i,s,n){p();let r=new nt("curve"),o=270-v.toDegrees(s),a=270-v.toDegrees(n),c=v.toDegrees(n-s),l=Math.PI*i*c/180;r.addSegment(o,l,1,!0),r.endPlot(a,1,!0),r.draw(t+i*v.cos(-o-90),e+i*v.sin(-o-90),1)},t.background=function(t,e,i){M="transparent"===t?new T(e):new T(...arguments),I.worker.postMessage({color:M.gl,isBG:!0})},t.beginPath=ut,t.beginStroke=function(t,e,i){lt=[e,i],ct=new nt(t)},t.box=U,t.circle=function(t,e,i,s=!1){let n=new nt("curve"),r=Math.PI*i/2,o=v.rr(0,360),a=()=>s?1+.2*v.rr():1;n.addSegment(0+o*a(),r*a(),1,!0),n.addSegment(o*a()-90,r*a(),1,!0),n.addSegment(o*a()-180,r*a(),1,!0),n.addSegment(o*a()-270,r*a(),1,!0);let c=s?v.randInt(-5,5):0;s&&n.addSegment(o,Math.abs(c)*(Math.PI/180)*i,1,!0),n.endPlot(c+o,1,!0);let l=[t-i*v.sin(o),e-i*v.cos(-o)];n.show(l[0],l[1],1)},t.clip=$,t.closePath=dt,t.drawImage=function(t,e=0,i=0,s=t.width,n=t.height){"[object ImageBitmap]"===Object.prototype.toString.call(t)&&0===e||(I.ctx.drawImage(...arguments),t=I.mask.transferToImageBitmap()),I.blend(!1,!1,t)},t.drawPath=ft,t.endFrame=L,t.endStroke=function(t,e){ct.endPlot(t,e),ct.draw(lt[0],lt[1],1),ct=!1},t.erase=function(t=M,e=255){pt.isActive=!0,pt.c=new T(t),pt.a=e},t.field=function(t){p(),F.isActive=!0,F.current=t},t.fillBleed=_t,t.fillStyle=yt,t.fillTexture=vt,t.frameRate=Tt,t.getCanvas=async function(){let t;return await new Promise((function(e){I.worker.postMessage({get:!0}),I.worker.onmessage=function(i){0!==i.data&&(t=i.data.canvas,e())}})),t},t.hatch=J,t.hatchArray=et,t.hatchStyle=function(t,e="black",i=1){tt.hatchingBrush=[t,e,i]},t.line=V,t.lineTo=mt,t.lineWidth=j,t.listFields=function(){return Array.from(F.list.keys())},t.load=x,t.loop=function(t){At=t,Pt=!0,requestAnimationFrame(It)},t.move=function(t,e,i){ct.addSegment(t,e,i)},t.moveTo=gt,t.noClip=K,t.noErase=function(){pt.isActive=!1},t.noField=function(){F.isActive=!1},t.noFill=function(){wt.isActive=!1},t.noHatch=function(){tt.isActive=!1,tt.hatchingBrush=!1},t.noLoop=function(){Pt=!1},t.noStroke=H,t.noiseSeed=function(e){t.noise=o(a(e))},t.pick=G,t.polygon=function(t){new it(t).show()},t.random=w,t.rect=function(t,e,i,s,n="corner"){"center"==n&&(t-=i/2,e-=s/2),ut(0),gt(t,e),mt(t+i,e),mt(t+i,e+s),mt(t,e+s),dt(),ft()},t.refreshField=function(t){F.refresh(t)},t.restore=function(){I.ctx.restore();let t=I.ctx.getTransform();k.x=t.e,k.y=t.f,F.setState(A.field),X.setState(A.stroke),tt.setState(A.hatch),wt.setState(A.fill)},t.rotate=function(t=0){I.ctx.rotate(t)},t.save=function(){I.ctx.save(),A.field=F.getState(),A.stroke=X.getState(),A.hatch=tt.getState(),A.fill=wt.getState()},t.scale=z,t.scaleBrushes=W,t.seed=function(t){y=a(t)},t.set=q,t.setDensity=function(t){d=t,W(d)},t.spline=function(t,e=.5){xt(t,e).draw()},t.stroke=function(t,e,i,s){p(),X.initializeDrawingState(t,e,i,!0,!1),X.draw(v.toDegrees(s),!1)},t.strokeStyle=Z,t.translate=function(t,e){I.ctx.translate(t,e);let i=I.ctx.getTransform();k.x=i.e,k.y=i.f},t.wRand=b}));

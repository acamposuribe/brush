!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).brush={})}(this,(function(t){"use strict";Worker.createURL=function(t){const e="function"==typeof t?t.toString():t,n=new Blob(["'use strict';\nself.onmessage ="+e],{type:"text/javascript"});return window.URL.createObjectURL(n)},Worker.create=function(t){return new Worker(Worker.createURL(t))};const e=()=>Worker.create((function(t){let e,n;const i={};function r(){let t=s();const e=n.createFramebuffer();return n.bindFramebuffer(n.FRAMEBUFFER,e),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0),{texture:t,fbo:e}}function s(){const t=n.createTexture();return n.bindTexture(n.TEXTURE_2D,t),n.texStorage2D(n.TEXTURE_2D,1,n.RGBA8,e.width,e.height),t}function o(){return self.navigator&&/Safari/.test(self.navigator.userAgent)&&!/Chrome/.test(self.navigator.userAgent)}onmessage=async t=>{if(t.data.canvas)e=t.data.canvas,function(){n=e.getContext("webgl2");const t=((t,e,n)=>{const i=t.createProgram();for(let[r,s]of[[t.VERTEX_SHADER,e],[t.FRAGMENT_SHADER,n]]){const e=t.createShader(r);t.shaderSource(e,s),t.compileShader(e),t.attachShader(i,e)}return t.linkProgram(i),i})(n,"#version 300 es\n    out vec2 p;void main(){vec3 v=vec3(-1);v[gl_VertexID]=3.;gl_Position=vec4(p=v.xy,0,1);}","#version 300 es\n\n    precision highp float;\n\n    uniform vec4 u_addColor;\n    uniform bool u_isErase;\n    uniform float u_flip;\n    uniform bool u_isFBO;\n    uniform sampler2D u_source;\n    uniform sampler2D u_mask;\n\n    in vec2 p;\n\n    out vec4 outColor;\n\n    float rand(vec2 co, float a, float b, float c) {\n        return fract(sin(dot(co, vec2(a, b))) * c);\n    }\n\n    #ifndef SPECTRAL\n    #define SPECTRAL\n\n    const int SPECTRAL_SIZE = 38;\n    const float SPECTRAL_GAMMA = 2.4;\n    const float SPECTRAL_EPSILON = 0.0001;\n\n    float spectral_uncompand(float x) {\n    return (x < 0.04045) ? x / 12.92 : pow((x + 0.055) / 1.055, SPECTRAL_GAMMA);\n    }\n\n    float spectral_compand(float x) {\n    return (x < 0.0031308) ? x * 12.92 : 1.055 * pow(x, 1.0 / SPECTRAL_GAMMA) - 0.055;\n    }\n\n    vec3 spectral_srgb_to_linear(vec3 srgb) {\n        return vec3(spectral_uncompand(srgb[0]), spectral_uncompand(srgb[1]), spectral_uncompand(srgb[2]));\n    }\n\n    vec3 spectral_linear_to_srgb(vec3 lrgb) {\n        return clamp(vec3(spectral_compand(lrgb[0]), spectral_compand(lrgb[1]), spectral_compand(lrgb[2])), 0.0, 1.0);\n    }\n\n    void spectral_upsampling(vec3 lrgb, out float w, out float c, out float m, out float y, out float r, out float g, out float b) {\n        w = min(lrgb.r, min(lrgb.g, lrgb.b));\n\n        lrgb -= w;\n\n        c = min(lrgb.g, lrgb.b);\n        m = min(lrgb.r, lrgb.b);\n        y = min(lrgb.r, lrgb.g);\n        r = min(max(0., lrgb.r - lrgb.b), max(0., lrgb.r - lrgb.g));\n        g = min(max(0., lrgb.g - lrgb.b), max(0., lrgb.g - lrgb.r));\n        b = min(max(0., lrgb.b - lrgb.g), max(0., lrgb.b - lrgb.r));\n    }\n\n    void spectral_linear_to_reflectance(vec3 lrgb, inout float R[SPECTRAL_SIZE]) {\n        float w, c, m, y, r, g, b;\n        \n        spectral_upsampling(lrgb, w, c, m, y, r, g, b);\n        \n        R[0] = max(SPECTRAL_EPSILON, w + c * 0.96853629 + m * 0.51567122 + y * 0.02055257 + r * 0.03147571 + g * 0.49108579 + b * 0.97901834);\n        R[1] = max(SPECTRAL_EPSILON, w + c * 0.96855103 + m * 0.54015520 + y * 0.02059936 + r * 0.03146636 + g * 0.46944057 + b * 0.97901649);\n        R[2] = max(SPECTRAL_EPSILON, w + c * 0.96859338 + m * 0.62645502 + y * 0.02062723 + r * 0.03140624 + g * 0.40165780 + b * 0.97901118);\n        R[3] = max(SPECTRAL_EPSILON, w + c * 0.96877345 + m * 0.75595012 + y * 0.02073387 + r * 0.03119611 + g * 0.24490420 + b * 0.97892146);\n        R[4] = max(SPECTRAL_EPSILON, w + c * 0.96942204 + m * 0.92826996 + y * 0.02114202 + r * 0.03053888 + g * 0.06826880 + b * 0.97858555);\n        R[5] = max(SPECTRAL_EPSILON, w + c * 0.97143709 + m * 0.97223624 + y * 0.02233154 + r * 0.02856855 + g * 0.02732883 + b * 0.97743705);\n        R[6] = max(SPECTRAL_EPSILON, w + c * 0.97541862 + m * 0.98616174 + y * 0.02556857 + r * 0.02459485 + g * 0.01360600 + b * 0.97428075);\n        R[7] = max(SPECTRAL_EPSILON, w + c * 0.98074186 + m * 0.98955255 + y * 0.03330189 + r * 0.01929520 + g * 0.01000187 + b * 0.96663223);\n        R[8] = max(SPECTRAL_EPSILON, w + c * 0.98580992 + m * 0.98676237 + y * 0.05185294 + r * 0.01423112 + g * 0.01284127 + b * 0.94822893);\n        R[9] = max(SPECTRAL_EPSILON, w + c * 0.98971194 + m * 0.97312575 + y * 0.10087639 + r * 0.01033111 + g * 0.02636635 + b * 0.89937713);\n        R[10] = max(SPECTRAL_EPSILON, w + c * 0.99238027 + m * 0.91944277 + y * 0.24000413 + r * 0.00765876 + g * 0.07058713 + b * 0.76070164);\n        R[11] = max(SPECTRAL_EPSILON, w + c * 0.99409844 + m * 0.32564851 + y * 0.53589066 + r * 0.00593693 + g * 0.70421692 + b * 0.46420440);\n        R[12] = max(SPECTRAL_EPSILON, w + c * 0.99517200 + m * 0.13820628 + y * 0.79874659 + r * 0.00485616 + g * 0.85473994 + b * 0.20123039);\n        R[13] = max(SPECTRAL_EPSILON, w + c * 0.99576545 + m * 0.05015143 + y * 0.91186529 + r * 0.00426186 + g * 0.95081565 + b * 0.08808402);\n        R[14] = max(SPECTRAL_EPSILON, w + c * 0.99593552 + m * 0.02912336 + y * 0.95399623 + r * 0.00409039 + g * 0.97170370 + b * 0.04592894);\n        R[15] = max(SPECTRAL_EPSILON, w + c * 0.99564041 + m * 0.02421691 + y * 0.97137099 + r * 0.00438375 + g * 0.97651888 + b * 0.02860373);\n        R[16] = max(SPECTRAL_EPSILON, w + c * 0.99464769 + m * 0.02660696 + y * 0.97939505 + r * 0.00537525 + g * 0.97429245 + b * 0.02060067);\n        R[17] = max(SPECTRAL_EPSILON, w + c * 0.99229579 + m * 0.03407586 + y * 0.98345207 + r * 0.00772962 + g * 0.97012917 + b * 0.01656701);\n        R[18] = max(SPECTRAL_EPSILON, w + c * 0.98638762 + m * 0.04835936 + y * 0.98553736 + r * 0.01366120 + g * 0.94258630 + b * 0.01451549);\n        R[19] = max(SPECTRAL_EPSILON, w + c * 0.96829712 + m * 0.00011720 + y * 0.98648905 + r * 0.03181352 + g * 0.99989207 + b * 0.01357964);\n        R[20] = max(SPECTRAL_EPSILON, w + c * 0.89228016 + m * 0.00008554 + y * 0.98674535 + r * 0.10791525 + g * 0.99989891 + b * 0.01331243);\n        R[21] = max(SPECTRAL_EPSILON, w + c * 0.53740239 + m * 0.85267882 + y * 0.98657555 + r * 0.46249516 + g * 0.13823139 + b * 0.01347661);\n        R[22] = max(SPECTRAL_EPSILON, w + c * 0.15360445 + m * 0.93188793 + y * 0.98611877 + r * 0.84604333 + g * 0.06968113 + b * 0.01387181);\n        R[23] = max(SPECTRAL_EPSILON, w + c * 0.05705719 + m * 0.94810268 + y * 0.98559942 + r * 0.94275572 + g * 0.05628787 + b * 0.01435472);\n        R[24] = max(SPECTRAL_EPSILON, w + c * 0.03126539 + m * 0.94200977 + y * 0.98507063 + r * 0.96860996 + g * 0.06111561 + b * 0.01479836);\n        R[25] = max(SPECTRAL_EPSILON, w + c * 0.02205445 + m * 0.91478045 + y * 0.98460039 + r * 0.97783966 + g * 0.08987709 + b * 0.01515250);\n        R[26] = max(SPECTRAL_EPSILON, w + c * 0.01802271 + m * 0.87065445 + y * 0.98425301 + r * 0.98187757 + g * 0.13656016 + b * 0.01540513);\n        R[27] = max(SPECTRAL_EPSILON, w + c * 0.01613460 + m * 0.78827548 + y * 0.98403909 + r * 0.98377315 + g * 0.22169624 + b * 0.01557233);\n        R[28] = max(SPECTRAL_EPSILON, w + c * 0.01520947 + m * 0.65738359 + y * 0.98388535 + r * 0.98470202 + g * 0.32176956 + b * 0.01565710);\n        R[29] = max(SPECTRAL_EPSILON, w + c * 0.01475977 + m * 0.59909403 + y * 0.98376116 + r * 0.98515481 + g * 0.36157329 + b * 0.01571025);\n        R[30] = max(SPECTRAL_EPSILON, w + c * 0.01454263 + m * 0.56817268 + y * 0.98368246 + r * 0.98537114 + g * 0.48361920 + b * 0.01571916);\n        R[31] = max(SPECTRAL_EPSILON, w + c * 0.01444459 + m * 0.54031997 + y * 0.98365023 + r * 0.98546685 + g * 0.46488579 + b * 0.01572133);\n        R[32] = max(SPECTRAL_EPSILON, w + c * 0.01439897 + m * 0.52110241 + y * 0.98361309 + r * 0.98550011 + g * 0.47440306 + b * 0.01572502);\n        R[33] = max(SPECTRAL_EPSILON, w + c * 0.01437620 + m * 0.51041094 + y * 0.98357259 + r * 0.98551031 + g * 0.48576990 + b * 0.01571717);\n        R[34] = max(SPECTRAL_EPSILON, w + c * 0.01436343 + m * 0.50526577 + y * 0.98353856 + r * 0.98550741 + g * 0.49267971 + b * 0.01571905);\n        R[35] = max(SPECTRAL_EPSILON, w + c * 0.01435687 + m * 0.50255080 + y * 0.98351247 + r * 0.98551323 + g * 0.49625685 + b * 0.01571059);\n        R[36] = max(SPECTRAL_EPSILON, w + c * 0.01435370 + m * 0.50126452 + y * 0.98350101 + r * 0.98551563 + g * 0.49807754 + b * 0.01569728);\n        R[37] = max(SPECTRAL_EPSILON, w + c * 0.01435408 + m * 0.50083021 + y * 0.98350852 + r * 0.98551547 + g * 0.49889859 + b * 0.01570020);\n    }\n\n    vec3 spectral_xyz_to_srgb(vec3 xyz) {\n        mat3 XYZ_RGB;\n\n        XYZ_RGB[0] = vec3( 3.24306333, -1.53837619, -0.49893282);\n        XYZ_RGB[1] = vec3(-0.96896309,  1.87542451,  0.04154303);\n        XYZ_RGB[2] = vec3( 0.05568392, -0.20417438,  1.05799454);\n        \n        float r = dot(XYZ_RGB[0], xyz);\n        float g = dot(XYZ_RGB[1], xyz);\n        float b = dot(XYZ_RGB[2], xyz);\n\n        return spectral_linear_to_srgb(vec3(r, g, b));\n    }\n\n    vec3 spectral_reflectance_to_xyz(float R[SPECTRAL_SIZE]) {\n        vec3 xyz = vec3(0.0);\n        \n        xyz +=  R[0] * vec3(0.00006469, 0.00000184, 0.00030502);\n        xyz +=  R[1] * vec3(0.00021941, 0.00000621, 0.00103681);\n        xyz +=  R[2] * vec3(0.00112057, 0.00003101, 0.00531314);\n        xyz +=  R[3] * vec3(0.00376661, 0.00010475, 0.01795439);\n        xyz +=  R[4] * vec3(0.01188055, 0.00035364, 0.05707758);\n        xyz +=  R[5] * vec3(0.02328644, 0.00095147, 0.11365162);\n        xyz +=  R[6] * vec3(0.03455942, 0.00228226, 0.17335873);\n        xyz +=  R[7] * vec3(0.03722379, 0.00420733, 0.19620658);\n        xyz +=  R[8] * vec3(0.03241838, 0.00668880, 0.18608237);\n        xyz +=  R[9] * vec3(0.02123321, 0.00988840, 0.13995048);\n        xyz += R[10] * vec3(0.01049099, 0.01524945, 0.08917453);\n        xyz += R[11] * vec3(0.00329584, 0.02141831, 0.04789621);\n        xyz += R[12] * vec3(0.00050704, 0.03342293, 0.02814563);\n        xyz += R[13] * vec3(0.00094867, 0.05131001, 0.01613766);\n        xyz += R[14] * vec3(0.00627372, 0.07040208, 0.00775910);\n        xyz += R[15] * vec3(0.01686462, 0.08783871, 0.00429615);\n        xyz += R[16] * vec3(0.02868965, 0.09424905, 0.00200551);\n        xyz += R[17] * vec3(0.04267481, 0.09795667, 0.00086147);\n        xyz += R[18] * vec3(0.05625475, 0.09415219, 0.00036904);\n        xyz += R[19] * vec3(0.06947040, 0.08678102, 0.00019143);\n        xyz += R[20] * vec3(0.08305315, 0.07885653, 0.00014956);\n        xyz += R[21] * vec3(0.08612610, 0.06352670, 0.00009231);\n        xyz += R[22] * vec3(0.09046614, 0.05374142, 0.00006813);\n        xyz += R[23] * vec3(0.08500387, 0.04264606, 0.00002883);\n        xyz += R[24] * vec3(0.07090667, 0.03161735, 0.00001577);\n        xyz += R[25] * vec3(0.05062889, 0.02088521, 0.00000394);\n        xyz += R[26] * vec3(0.03547396, 0.01386011, 0.00000158);\n        xyz += R[27] * vec3(0.02146821, 0.00810264, 0.00000000);\n        xyz += R[28] * vec3(0.01251646, 0.00463010, 0.00000000);\n        xyz += R[29] * vec3(0.00680458, 0.00249138, 0.00000000);\n        xyz += R[30] * vec3(0.00346457, 0.00125930, 0.00000000);\n        xyz += R[31] * vec3(0.00149761, 0.00054165, 0.00000000);\n        xyz += R[32] * vec3(0.00076970, 0.00027795, 0.00000000);\n        xyz += R[33] * vec3(0.00040737, 0.00014711, 0.00000000);\n        xyz += R[34] * vec3(0.00016901, 0.00006103, 0.00000000);\n        xyz += R[35] * vec3(0.00009522, 0.00003439, 0.00000000);\n        xyz += R[36] * vec3(0.00004903, 0.00001771, 0.00000000);\n        xyz += R[37] * vec3(0.00002000, 0.00000722, 0.00000000);\n\n        return xyz;\n    }\n\n    float spectral_linear_to_concentration(float l1, float l2, float t) {\n        float t1 = l1 * pow(1.0 - t, 2.0);\n        float t2 = l2 * pow(t, 2.0);\n\n        return t2 / (t1 + t2);\n    }\n\n    vec3 spectral_mix(vec3 color1, vec3 color2, float t) {\n        vec3 lrgb1 = spectral_srgb_to_linear(color1);\n        vec3 lrgb2 = spectral_srgb_to_linear(color2);\n\n        float R1[SPECTRAL_SIZE];\n        float R2[SPECTRAL_SIZE];\n\n        spectral_linear_to_reflectance(lrgb1, R1);\n        spectral_linear_to_reflectance(lrgb2, R2);\n\n        float l1 = spectral_reflectance_to_xyz(R1)[1];\n        float l2 = spectral_reflectance_to_xyz(R2)[1];\n\n        t = spectral_linear_to_concentration(l1, l2, t);\n\n        float R[SPECTRAL_SIZE];\n\n        for (int i = 0; i < SPECTRAL_SIZE; i++) {\n        float KS = (1.0 - t) * (pow(1.0 - R1[i], 2.0) / (2.0 * R1[i])) + t * (pow(1.0 - R2[i], 2.0) / (2.0 * R2[i]));\n        float KM = 1.0 + KS - sqrt(pow(KS, 2.0) + 2.0 * KS);\n\n        R[i] = KM;\n        }\n\n        return spectral_xyz_to_srgb(spectral_reflectance_to_xyz(R));\n    }\n\n    #endif\n\n    void main(void) {\n        vec2 uv = .5 * vec2(p.x, u_flip * p.y) + .5;\n        vec4 source = texture(u_source, uv);\n\n        if (u_isFBO) {\n            outColor = source;\n        } else {\n            vec4 maskColor = texture(u_mask, uv);\n            if (maskColor.r > 0.) {\n                vec2 r = vec2(12.9898,78.233), a = vec2(7.9898,58.233), l = vec2(17.9898,3.233); \n                float d = rand(uv, r.x, r.y, 43358.5453) * 2. - 1., x= rand(uv, a.x, a.y, 43213.5453) * 2. - 1., s=rand(uv, l.x, l.y, 33358.5453) * 2. - 1.;\n                vec4 pigment = vec4(u_addColor.xyz,1.0);\n\n                float darken_above = 0.7;\n                if (maskColor.a > darken_above && !u_isErase) {\n                    float blacken = 0.5 * (maskColor.a - darken_above);\n                    pigment = pigment * (1. - blacken) - vec4(0.5) * blacken;\n                }\n\n                    vec3 mixedColor = spectral_mix(source.xyz, pigment.xyz, maskColor.a);\n                    outColor = vec4(mixedColor + 0.002 * vec3(d,x,s), 1);\n                \n            } else {\n                outColor = source;\n            }\n        }        \n    }");let o=["u_flip","u_addColor","u_isErase","u_isFBO","u_source","u_mask","u_isImage"];for(let e of o)i[e]=n.getUniformLocation(t,e);n.useProgram(t),i.mask=s(),i.source=r(),i.target=r(),n.activeTexture(n.TEXTURE0),n.bindTexture(n.TEXTURE_2D,i.source.texture),n.activeTexture(n.TEXTURE1),n.bindTexture(n.TEXTURE_2D,i.mask),n.uniform1i(i.u_source,0),n.uniform1i(i.u_mask,1)}();else if(t.data.isBG)n.bindFramebuffer(n.DRAW_FRAMEBUFFER,i.source.fbo),n.clearColor(...t.data.color),n.clear(n.COLOR_BUFFER_BIT|n.DEPTH_BUFFER_BIT);else if(t.data.mask)!function(t){let r;if(o()){const e=new OffscreenCanvas(t.mask.width,t.mask.height).getContext("2d");e.drawImage(t.mask,0,0),r=e.getImageData(0,0,t.mask.width,t.mask.height)}n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,o()?r:t.mask),t.mask.close(),n.bindFramebuffer(n.DRAW_FRAMEBUFFER,i.target.fbo),n.uniform1f(i.u_flip,1),n.uniform1i(i.u_isFBO,!1),n.uniform1i(i.u_isImage,!!t.isImage),t.isImage||(n.uniform1i(i.u_isImage,!1),n.uniform4f(i.u_addColor,...t.addColor),n.uniform1i(i.u_isErase,!!t.isErase)),n.drawArrays(n.TRIANGLES,0,3),n.bindFramebuffer(n.READ_FRAMEBUFFER,i.target.fbo),n.bindFramebuffer(n.DRAW_FRAMEBUFFER,i.source.fbo),n.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,n.COLOR_BUFFER_BIT,n.NEAREST),n.invalidateFramebuffer(n.READ_FRAMEBUFFER,[n.COLOR_ATTACHMENT0]),t.isLast&&!t.sp&&(n.bindFramebuffer(n.FRAMEBUFFER,null),n.uniform1i(i.u_isImage,!1),n.uniform1i(i.u_isFBO,!0),n.uniform1f(i.u_flip,-1),n.drawArrays(n.TRIANGLES,0,3))}(t.data);else if(t.data.get){let t=await createImageBitmap(e);postMessage({canvas:t},[t]),t.close()}}})),n=document.createElement("canvas");n.width=1,n.height=1;const i=n.getContext("2d");class r{constructor(t,e,n){if(!this.g&&isNaN(t)){this.hex=this.standardize(t);let e=this.hexToRgb(this.hex);this.r=e.r,this.g=e.g,this.b=e.b}else this.r=t,this.g=e||t,this.b=n||t,this.hex=this.rgbToHex(this.r,this.g,this.b);this.gl=[this.r/255,this.g/255,this.b/255,1]}rgbToHex(t,e,n){return"#"+(1<<24|t<<16|e<<8|n).toString(16).slice(1)}hexToRgb(t){t=t.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,(function(t,e,n,i){return e+e+n+n+i+i}));let e=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);return e?{r:parseInt(e[1],16),g:parseInt(e[2],16),b:parseInt(e[3],16)}:null}standardize(t){return i.fillStyle=t,i.fillStyle}}const s={loaded:!1,isBlending:!1,currentColor:new r("white").gl,load(){if(!jt[Kt].worker){let t=jt[Kt];t.mask=new OffscreenCanvas($t,Vt),t.ctx=t.mask.getContext("2d"),t.ctx.lineWidth=0,t.offscreen=jt[Kt].canvas.transferControlToOffscreen(),t.worker=e(),t.worker.postMessage("init"),t.worker.postMessage({canvas:t.offscreen},[t.offscreen])}this.mask=jt[Kt].mask,this.ctx=jt[Kt].ctx,this.worker=jt[Kt].worker},blend(t=!1,e=!1,n=!1,i=!1){this.isBlending||t&&(this.currentColor=t.gl,this.isBlending=!0);let r,s=t?t.gl:this.currentColor;if(r=!(!e&&!n)||s.toString()!==this.currentColor.toString(),r){let r=n||this.mask.transferToImageBitmap();this.worker.postMessage({addColor:this.currentColor,mask:r,isLast:e,isErase:this.isErase,isImage:!!n,sp:i},[r]),this.isErase=!1,e||(this.currentColor=t.gl),e&&!i&&(this.isBlending=!1)}}};let o=new r("white");const a=Math.sqrt(3),c=.5*(a-1),l=(3-a)/6,h=t=>0|Math.floor(t),u=new Float64Array([1,1,-1,1,1,-1,-1,-1,1,0,-1,0,1,0,-1,0,0,1,0,-1,0,1,0,-1]);function f(t=Math.random){const e=function(t){const e=512,n=new Uint8Array(e);for(let t=0;t<e/2;t++)n[t]=t;for(let i=0;i<e/2-1;i++){const e=i+~~(t()*(256-i)),r=n[i];n[i]=n[e],n[e]=r}for(let t=256;t<e;t++)n[t]=n[t-256];return n}(t),n=new Float64Array(e).map((t=>u[t%12*2])),i=new Float64Array(e).map((t=>u[t%12*2+1]));return function(t,r){let s=0,o=0,a=0;const u=(t+r)*c,f=h(t+u),x=h(r+u),m=(f+x)*l,g=t-(f-m),d=r-(x-m);let p,y;g>d?(p=1,y=0):(p=0,y=1);const _=g-p+l,v=d-y+l,b=g-1+2*l,R=d-1+2*l,w=255&f,E=255&x;let S=.5-g*g-d*d;if(S>=0){const t=w+e[E];S*=S,s=S*S*(n[t]*g+i[t]*d)}let P=.5-_*_-v*v;if(P>=0){const t=w+p+e[E+y];P*=P,o=P*P*(n[t]*_+i[t]*v)}let A=.5-b*b-R*R;if(A>=0){const t=w+1+e[E+1];A*=A,a=A*A*(n[t]*b+i[t]*R)}return 70*(s+o+a)}}function x(t,e){let n=new m(t),i=()=>n.next();return i.double=()=>i()+11102230246251565e-32*(2097152*i()|0),i.int32=()=>4294967296*n.next()|0,i.quick=i,i}class m{constructor(t){null==t&&(t=+new Date);let e=4022871197;function n(t){t=String(t);for(let n=0;n<t.length;n++){e+=t.charCodeAt(n);let i=.02519603282416938*e;e=i>>>0,i-=e,i*=e,e=i>>>0,i-=e,e+=4294967296*i}return 2.3283064365386963e-10*(e>>>0)}this.c=1,this.s0=n(" "),this.s1=n(" "),this.s2=n(" "),this.s0-=n(t),this.s0<0&&(this.s0+=1),this.s1-=n(t),this.s1<0&&(this.s1+=1),this.s2-=n(t),this.s2<0&&(this.s2+=1)}next(){let{c:t,s0:e,s1:n,s2:i}=this,r=2091639*e+2.3283064365386963e-10*t;return this.s0=n,this.s1=i,this.s2=r-(this.c=0|r)}copy(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}}let g=x(Math.random());let d=x(Math.random());t.noise=f(d);const p=(t=0,e=1)=>t+g()*(e-t),y=(t,e)=>~~p(t,e);function _(t=0,e=1){const n=1-g(),i=g();return Math.sqrt(-2*Math.log(n))*E(360*i)*e+t}function v(t){let e,n,i=[];for(e in t)for(n=0;n<10*t[e];n++)i.push(e);let r=i[Math.floor(g()*i.length)];return isNaN(r)?r:parseInt(r)}function b(t,e,n,i,r,s=!1){let o=i+(t-e)/(n-e)*(r-i);return s?i<r?R(o,i,r):R(o,r,i):o}function R(t,e,n){return Math.max(Math.min(t,n),e)}function w(t){return(t%=360)<0?t+360:t}function E(t){return T[~~(4*w(t))]}function S(t){return C[~~(4*w(t))]}const P=1440,A=2*Math.PI/P,T=new Float32Array(P),C=new Float32Array(P);for(let t=0;t<P;t++){const e=t*A;T[t]=Math.cos(e),C[t]=Math.sin(e)}const L=t=>{let e=180*t/Math.PI%360;return e<0?e+360:e},I=(t,e,n,i)=>Math.sqrt((n-t)*(n-t)+(i-e)*(i-e)),M=(t,e,n,i)=>L(Math.atan2(-(i-e),n-t));function k(t,e,n,i,r=!1){let s=t.x,o=t.y,a=e.x,c=e.y,l=n.x,h=n.y,u=i.x,f=i.y;if(s===a&&o===c||l===u&&h===f)return!1;let x=a-s,m=c-o,g=u-l,d=f-h,p=d*x-g*m;if(0===p)return!1;let y=(g*(o-h)-d*(s-l))/p,_=(x*(o-h)-m*(s-l))/p;return!(!r&&(_<0||_>1))&&{x:s+y*x,y:o+y*m}}function z(t,e,n,i,r){let s=E(r),o=S(r);return{x:s*(n-t)+o*(i-e)+t,y:s*(i-e)-o*(n-t)+e}}const F=2*Math.PI;let O,N,B,X,Y,U,D={color:new r("black"),weight:1,clipWindow:null,type:"HB"},W=!1,G=new Map;function Z(){return{isActive:W,current:{...D}}}function q(t){W=t.isActive,D={...t.current}}function H(t,e){e.type=["marker","custom","image","spray"].includes(e.type)?e.type:"default",G.set(t,{param:e,colors:[],buffers:[]})}function j(t){G.has(t)&&(D.type=t)}function K(t,e,n){D.color=new r(...arguments),W=!0}function $(t){D.weight=t}function V(t,e,n=1){j(t),K(e),$(n)}function J(){const{param:t}=G.get(D.type)??{};return t?"default"===t.type||"spray"===t.type?t.spacing/D.weight:t.spacing:1}function Q(t,e,n,i,r){O=new gt(t,e),N=n,B=i,X=r,X&&X.calcIndex(0)}function tt(t,e){e||(Y=t),function(){const{param:t}=G.get(D.type)??{};if(!t)return;D.p=t;const{pressure:e}=t;D.a="custom"!==e.type?p(-1,1):0,D.b="custom"!==e.type?p(1,1.5):0,D.cp="custom"!==e.type?p(3,3.5):p(-.2,.2),[D.min,D.max]=e.min_max,s.blend(D.color),s.ctx.save(),lt(),U=st(),n=U,s.ctx.fillStyle="rgb(255 0 0 / "+n+"%)",s.ctx.beginPath();var n}();const n=J(),i=Math.round(N*(e?t:1)/n);for(let r=0;r<i;r++)et(),e?O.plotTo(X,n,n,t):O.moveTo(n,t,n,B);s.ctx.fill(),lt(),s.ctx.restore()}function et(t=!1){if(!ot())return;let e=t||nt();switch(e*=1-Tt.bField(O),D.p.type){case"spray":!function(t){const e=D.weight*D.p.vibration*t+D.weight*_()*D.p.vibration/3,n=D.weight*p(.9,1.1),i=Math.ceil(D.p.quality/t);for(let t=0;t<i;t++){const t=p(.9,1.1),i=t*e*p(-1,1),r=p(-1,1),s=Math.sqrt((t*e)**2-i**2);at(O.x+i,O.y+r*s,n)}}(e);break;case"marker":ct(e);break;case"custom":case"image":!function(t,e,n=!0){s.ctx.save();const i=n?D.weight*D.p.vibration:0,r=n?i*p(-1,1):0,o=n?i*p(-1,1):0;s.ctx.translate(O.x+r,O.y+o),function(t){s.ctx.scale(t,t);let e=0;"random"===D.p.rotate?e=y(0,F):"natural"===D.p.rotate&&(e=(X?-X.angle(O.plotted):-Y)+(B?O.angle():0),e=e*Math.PI/180);s.ctx.rotate(e)}(D.weight*t),D.p.tip(s.ctx),s.ctx.restore()}(e);break;default:!function(t){const e=D.weight*D.p.vibration*(D.p.definition+(1-D.p.definition)*_()*rt(.5,.9,5,.2,1.2)/t);p(0,D.p.quality*t)>.4&&at(O.x+.7*e*p(-1,1),O.y+e*p(-1,1),t*D.p.weight*p(.85,1.15))}(e)}}function nt(){return X?it()*X.pressure(O.plotted):it()}function it(){return"custom"===D.p.pressure.type?b(D.p.pressure.curve(O.plotted/N)+D.cp,0,1,D.min,D.max,!0):rt()}function rt(t=.5+D.p.pressure.curve[0]*D.a,e=1-D.p.pressure.curve[1]*D.b,n=D.cp,i=D.min,r=D.max){return b(1/(1+Math.pow(Math.abs((O.plotted-t*N)/(e*N/2)),2*n)),0,1,i,r)}function st(){return["default","spray"].includes(D.p.type)?D.p.opacity:D.p.opacity/D.weight}function ot(){if(D.clipWindow)return O.x>=D.clipWindow[0]&&O.x<=D.clipWindow[2]&&O.y>=D.clipWindow[1]&&O.y<=D.clipWindow[3];{let t=$t,e=Vt,n=.05*$t,i=O.x+xt.x,r=O.y+xt.y;return i>=-n&&i<=t+n&&r>=-n&&r<=e+n}}function at(t,e,n){const i=n/1.2;s.ctx.rect(t-i/2,e-i/2,i,i)}function ct(t,e=!0){const n=e?D.weight*D.p.vibration:0,i=e?n*p(-1,1):0,r=e?n*p(-1,1):0;!function(t,e,n){const i=n/2;s.ctx.moveTo(t+i,e),s.ctx.arc(t,e,i,0,F)}(O.x+i,O.y+r,D.weight*D.p.weight*t)}function lt(){if(ot()){let t=nt(),e=st();if(s.ctx.fillStyle="rgb(255 0 0 / "+e/3+"%)","marker"===D.p.type)for(let e=1;e<5;e++)s.ctx.beginPath(),ct(t*e/5,!1),s.ctx.fill();else if("custom"===D.p.type||"image"===D.p.type)for(let n=1;n<5;n++)s.ctx.beginPath(),D.drawCustomOrImage(t*n/5,e,!1),s.ctx.fill()}}function ht(t,e,n,i){te();let r=I(t,e,n,i);0!=r&&(Q(t,e,r,!0,!1),tt(M(t,e,n,i),!1))}const ut=["weight","vibration","definition","quality","opacity","spacing","pressure","type","tip","rotate"],ft=[["pen",[.35,.12,.5,8,88,.3,{curve:[.15,.2],min_max:[1.4,.9]}]],["rotring",[.2,.05,.5,30,115,.15,{curve:[.35,.2],min_max:[1.3,.9]}]],["2B",[.35,.6,.1,8,140,.2,{curve:[.15,.2],min_max:[1.5,1]}]],["HB",[.3,.5,.4,4,130,.25,{curve:[.15,.2],min_max:[1.2,.9]}]],["2H",[.2,.4,.3,2,100,.2,{curve:[.15,.2],min_max:[1.2,.9]}]],["cpencil",[.4,.55,.8,7,70,.15,{curve:[.15,.2],min_max:[.95,1.2]}]],["charcoal",[.5,2,.8,300,70,.06,{curve:[.15,.2],min_max:[1.5,.8]}]],["spray",[.2,12,15,40,35,.65,{curve:[0,.1],min_max:[1,1]},"spray"]],["marker",[2.5,.12,null,null,25,.4,{curve:[.35,.25],min_max:[1.5,1]},"marker"]]];for(let t of ft){let e={};for(let n=0;n<t[1].length;n++)e[ut[n]]=t[1][n];H(t[0],e)}const xt={x:0,y:0};function mt(t){s.ctx.scale(t,t)}class gt{constructor(t,e){this.update(t,e),this.plotted=0}update(t,e){this.x=t,this.y=e,(bt||Fill.isActive)&&(this.x_offset=this.x+xt.x-pt,this.y_offset=this.y+xt.y-yt,this.column_index=Math.round(this.x_offset/dt),this.row_index=Math.round(this.y_offset/dt))}reset(){this.plotted=0}isIn(){return bt?this.column_index>=0&&this.row_index>=0&&this.column_index<_t&&this.row_index<vt:this.isInCanvas()}isInCanvas(){let t=$t,e=Vt,n=this.x+xt.x,i=this.y+xt.y;return n>=-.3*t&&n<=1.3*t&&i>=-.3*e&&i<=1.3*e}angle(){return this.isIn()&&bt?wt.get(Rt).field[this.column_index][this.row_index]:0}moveTo(t,e,n=J(),i=!0){if(this.isIn()){let r,s;i||(r=E(-e),s=S(-e));for(let o=0;o<t/n;o++){if(i){let t=this.angle();r=E(t-e),s=S(t-e)}let t=n*r,o=n*s;this.plotted+=n,this.update(this.x+t,this.y+o)}}else this.plotted+=n}plotTo(t,e,n,i){if(this.isIn()){const r=1/i;for(let i=0;i<e/n;i++){let e=this.angle(),i=t.angle(this.plotted),s=n*E(e-i),o=n*S(e-i);this.plotted+=n*r,this.update(this.x+s,this.y+o)}}else this.plotted+=n/mt}}let dt,pt,yt,_t,vt,bt=!1,Rt=null,wt=new Map;function Et(){dt=.01*$t,pt=-.5*$t,yt=-.5*Vt,_t=Math.round(2*$t/dt),vt=Math.round(2*Vt/dt),At("curved",(function(e,n){let i=y(-20,-10);y(0,100)%2==0&&(i*=-1);for(let r=0;r<_t;r++)for(let s=0;s<vt;s++){let o=b(t.noise(.01*r+.03*e,.01*s+.03*e),0,1,-i,i);n[r][s]=o}return n})),At("hand",(function(e,n){let i=p(.2,.8),r=y(5,10);for(let s=0;s<_t;s++)for(let o=0;o<vt;o++){let a=r*S(i*o*s+y(15,25)),c=t.noise(.1*s+e,.1*o+e);n[s][o]=.5*a*E(e)+c*a}return n})),At("seabed",(function(t,e){let n=p(.4,.8),i=y(18,26);for(let r=0;r<_t;r++)for(let s=0;s<vt;s++){let o=i*S(n*s*r+y(15,20));e[r][s]=1.1*o*E(t)}return e})),Tt.genField()}function St(t=0){wt.get(Rt).field=wt.get(Rt).gen(t,Pt())}function Pt(){let t=new Array(_t);for(let e=0;e<_t;e++)t[e]=new Float32Array(vt);return t}function At(t,e){te(),wt.set(t,{gen:e}),Rt=t,St()}const Tt={genField(){this.field=Pt(),this.fieldTemp=Pt(),this.brush=Pt().map((t=>t.map((()=>p(0,.25)))))},get(t,e,n=!1){const i=new gt(t,e);if(!i.isIn())return n??0;const{column_index:r,row_index:s}=i,o=this.field?.[r]?.[s];if(n){const t=Math.max(o,n);return this.fieldTemp[r][s]=Math.max(t,.75*(this.fieldTemp[r]?.[s]??0)),t}return o},bField(t){return t.isIn()?this.brush[t.column_index][t.row_index]:0},update(){this.field=this.fieldTemp.slice()},increase(t,e){const n=new gt(t,e);n.isIn()&&(this.brush[n.column_index][n.row_index]=p(.2,.5))}},Ct=2*Math.PI;let Lt,It={color:new r("#002185"),opacity:60,bleed_strength:.07,texture_strength:.4,border_strength:.4,direction:"out"},Mt=!1,kt=It.bleed_strength;function zt(){return{isActive:Mt,fillParams:{...It}}}function Ft(t){Mt=t.isActive,It={...t.fillParams}}class Ot{constructor(t,e,n,i,r=!1){this.pol=new Bt(t,!0),this.v=t,this.dir=i,this.m=e,this.midP=n,this.size=-1/0,this.sizeX=-1/0,this.sizeY=-1/0;for(let t of this.v)this.sizeX=Math.max(I(this.midP.x,0,t.x,0),this.sizeX),this.sizeY=Math.max(I(this.midP.y,0,t.y,0),this.sizeY),this.size=Math.max(I(this.midP.x,this.midP.y,t.x,t.y),this.size);if(r)for(let t=0;t<this.v.length;t++){const e=this.v[t],n=this.v[(t+1)%this.v.length],i={x:n.x-e.x,y:n.y-e.y},r=z(0,0,i.x,i.y,90);let s={point1:{x:e.x+i.x/2,y:e.y+i.y/2},point2:{x:e.x+i.x/2+r.x,y:e.y+i.y/2+r.y}};const o=(t,e,n)=>(e.x-t.x)*(n.y-t.y)-(e.y-t.y)*(n.x-t.x)>.01;let a=0;for(let t of Lt.intersect(s))o(e,n,t)&&a++;this.dir[t]=a%2==0}}trim(t=1){let e=[...this.v],n=[...this.m],i=[...this.dir];if(this.v.length>8&&t>=0&&1!==t){let r=~~((1-t)*this.v.length),s=~~this.v.length/2-~~r/2;e.splice(s,r),n.splice(s,r),i.splice(s,r)}return{v:e,m:n,dir:i}}grow(t=1,e){const n=[],i=[],r=[],s=this.trim(t),o=s.v,a=s.m,c=s.dir,l=o.length,h=e?-.5:1,u="out"===It.direction?-90:90,f=t=>t+function(t=0,e=1){return t-2*e+(g()+g()+g())/3*e*4}(0,.02);let x=!1;switch(t){case 999:x=p(.2,.4);break;case 997:x=It.bleed_strength/1.7}for(let t=0;t<l;t++){const e=o[t],s=o[(t+1)%l];let m=x||Tt.get(e.x,e.y,a[t]);m*=h;let g={x:s.x-e.x,y:s.y-e.y},d=(c[t]?u:-u)+45*p(-.4,.4),y=z(0,0,g.x,g.y,d),v=R(_(.5,.2),.1,.9),b=_(.5,.2)*p(.6,1.4)*m,w={x:e.x+g.x*v+y.x*b,y:e.y+g.y*v+y.y*b};n.push(e,w),i.push(a[t],f(a[t])),r.push(c[t],c[t])}return new Ot(n,i,this.midP,r)}fill(t,e,n){const i=3*n,r=1.5*e;s.blend(t),s.ctx.save(),s.ctx.fillStyle="rgb(255 0 0 / "+r+"%)",s.ctx.strokeStyle="rgb(255 0 0 / "+.008*It.border_strength+")";let o,a=this.grow();for(let n=0;n<24;n++){n%4==0&&(a=a.grow()),o=[a.grow(1-.0125*n),a.grow(.7-.0125*n),a.grow(.4-.0125*n)];for(let t of o)t.grow(997).grow().layer(n);a.grow(.1).grow(999).layer(n),0!==i&&n%2==0&&a.erase(3*i,e),n%6==0&&s.blend(t,!0,!1,!0)}Tt.update(),s.ctx.restore()}layer(t){const e=Math.max(this.sizeX,this.sizeY);s.ctx.lineWidth=b(t,0,24,e/30,e/45,!0),Xt(this.v),s.ctx.stroke(),s.ctx.fill()}circle(t,e,n){const i=n/2;s.ctx.moveTo(t+i,e),s.ctx.arc(t,e,i,0,Ct)}erase(t,e){s.ctx.save();const n=p(40,60)*b(t,0,1,2,3),i=this.sizeX/2,r=this.sizeY/2,o=Math.min(this.sizeX,this.sizeY)*(1.4-It.bleed_strength),a=.03*o,c=.25*o,l=this.midP.x,h=this.midP.y;s.ctx.globalCompositeOperation="destination-out";let u=(5-b(e,80,120,.3,2,!0))*t;s.ctx.fillStyle="rgb(255 0 0 / "+u/255+")",s.ctx.lineWidth=0;for(let t=0;t<n;t++){const e=l+_(0,i),n=h+_(0,r),o=p(a,c);s.ctx.beginPath(),this.circle(e,n,o),t%4!=0&&s.ctx.fill(),Math.abs(e-l)<2*i&&Math.abs(n-h)<2*r&&Tt.increase(e,n)}s.ctx.globalCompositeOperation="source-over",s.ctx.restore()}}const Nt={};class Bt{constructor(t,e=!1){this.a=t,this.vertices=t.map((t=>({x:t[0],y:t[1]}))),e&&(this.vertices=t),this.sides=this.vertices.map(((t,e,n)=>[t,n[(e+1)%n.length]]))}intersect(t){let e=`${t.point1.x},${t.point1.y}-${t.point2.x},${t.point2.y}`;if(this._intersectionCache&&this._intersectionCache[e])return this._intersectionCache[e];let n=[];for(let e of this.sides){let i=k(t.point1,t.point2,e[0],e[1]);!1!==i&&n.push(i)}return this._intersectionCache||(this._intersectionCache={}),this._intersectionCache[e]=n,n}draw(t=!1,e,n){let i=Z();if(t&&V(t,e,n),i.isActive){te();for(let t of this.sides)ht(t[0].x,t[0].y,t[1].x,t[1].y)}q(i)}fill(t=!1,e,n,i,r,s){let o=zt();t&&(fillStyle(t,e),fillBleed(n,s),fillTexture(i,r)),o.isActive&&(te(),function(t){Lt=t;let e=[...t.vertices];const n=e.length,i=.25*n*v({1:5,2:10,3:60}),r=It.bleed_strength;let s=e.map(((t,e)=>{let n=p(.85,1.2)*r;return e>i?n:.2*n})),o=y(0,n);e=[...e.slice(o),...e.slice(0,o)],new Ot(e,s,function(t){var e=t[0],n=t[t.length-1];e.x==n.x&&e.y==n.y||t.push(e);for(var i,r,s,o=0,a=0,c=0,l=t.length,h=0,u=l-1;h<l;u=h++)i=t[h],r=t[u],o+=s=(i.y-e.y)*(r.x-e.x)-(r.y-e.y)*(i.x-e.x),a+=(i.x+r.x-2*e.x)*s,c+=(i.y+r.y-2*e.y)*s;return{x:a/(s=3*o)+e.x,y:c/s+e.y}}(e),[],!0).fill(It.color,b(It.opacity,0,100,0,1,!0),It.texture_strength,!0)}(this)),Ft(o)}hatch(t=!1,e,n){let i=Gt();t&&Wt(t,e,n),i.isActive&&(te(),qt(this)),Zt(i)}erase(t=!1,e=Nt.a){(Nt.isActive||t)&&(t=t?new r(t):Nt.c,s.blend(t),s.isErase=!0,s.ctx.save(),s.ctx.fillStyle="rgb(255 0 0 / "+e+"%)",Xt(this.vertices),s.ctx.fill(),s.ctx.restore())}show(){this.fill(),this.hatch(),this.draw(),this.erase()}}function Xt(t){s.ctx.beginPath();for(let e=0;e<t.length;e++){let n=t[e];0==e?s.ctx.moveTo(n.x,n.y):s.ctx.lineTo(n.x,n.y)}}let Yt=!1,Ut={dist:5,angle:45,options:{}},Dt=!1;function Wt(t=5,e=45,n={rand:!1,continuous:!1,gradient:!1}){Yt=!0,Ut={dist:t,angle:e,options:n}}function Gt(){return{isActive:Yt,hatchingParams:{...Ut},hatchingBrush:{...Dt}}}function Zt(t){Yt=t.isActive,Ut={...t.hatchingParams},Dt={...t.hatchingBrush}}function qt(t){let{dist:e,angle:n,options:i}=Ut,r=Z();Dt&&V(...Object.values(Dt)),n=L(n)%180,Array.isArray(t)||(t=[t]);const s=function(t){let e={minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0};for(let n of t){const t=Ht(n);e.minX=Math.min(e.minX,t.minX),e.minY=Math.min(e.minY,t.minY),e.maxX=Math.max(e.maxX,t.maxX),e.maxY=Math.max(e.maxY,t.maxY)}return e}(t);let o=new Bt([[s.minX,s.minY],[s.maxX,s.minY],[s.maxX,s.maxY],[s.minX,s.maxY]]),a=n<=90&&n>=0?s.minY:s.maxY,c=i.gradient?b(i.gradient,0,1,1,1.1,!0):1,l=[],h=0,u=e,f=t=>({point1:{x:s.minX+u*t*E(90-n),y:a+u*t*S(90-n)},point2:{x:s.minX+u*t*E(90-n)+E(-n),y:a+u*t*S(90-n)+S(-n)}});for(;o.intersect(f(h)).length>0;){let e=[];for(let n of t)e.push(n.intersect(f(h)));l[h]=e.flat().sort(((t,e)=>t.x===e.x?t.y-e.y:t.x-e.x)),u*=c,h++}let x=[];for(let t of l)void 0!==t[0]&&x.push(t);let m=i.rand?i.rand:0;for(let t=0;t<x.length;t++){let n=x[t],r=t>0&&i.continuous;for(let i=0;i<n.length-1;i+=2)0!==m&&(n[i].x+=m*e*p(-10,10),n[i].y+=m*e*p(-10,10),n[i+1].x+=m*e*p(-10,10),n[i+1].y+=m*e*p(-10,10)),ht(n[i].x,n[i].y,n[i+1].x,n[i+1].y),r&&ht(x[t-1][1].x,x[t-1][1].y,n[i].x,n[i].y)}q(r)}function Ht(t){if(t._boundingBox)return t._boundingBox;let e=1/0,n=1/0,i=-1/0,r=-1/0;for(let s=0;s<t.a.length;s++){const[o,a]=t.a[s];o<e&&(e=o),o>i&&(i=o),a<n&&(n=a),a>r&&(r=a)}return t._boundingBox={minX:e,minY:n,maxX:i,maxY:r},t._boundingBox}const jt={};let Kt,$t,Vt,Jt=!1;function Qt(t,e){Kt=t,jt[Kt]||(jt[Kt]={},jt[Kt].canvas=e),$t=jt[Kt].canvas.width,Vt=jt[Kt].canvas.height,Jt||(Jt=!0,Et()),s.load()}function te(){Jt||Qt()}const ee={};class ne{constructor(t){this.segments=[],this.angles=[],this.pres=[],this.type=t,this.dir=0,this.calcIndex(0),this.pol=!1}addSegment(t=0,e=0,n=1,i=!1){this.angles.length>0&&this.angles.splice(-1),t=i?(t%360+360)%360:L(t),this.angles.push(t),this.pres.push(n),this.segments.push(e),this.length=this.segments.reduce(((t,e)=>t+e),0),this.angles.push(t)}endPlot(t=0,e=1,n=!1){t=n?(t%360+360)%360:L(t),this.angles.splice(-1),this.angles.push(t),this.pres.push(e)}rotate(t){this.dir=L(t)}pressure(t){return t>this.length?this.pres[this.pres.length-1]:this.curving(this.pres,t)}angle(t){return t>this.length?this.angles[this.angles.length-1]:(this.calcIndex(t),"curve"===this.type?this.curving(this.angles,t)+this.dir:this.angles[this.index]+this.dir)}curving(t,e){let n=t[this.index],i=t[this.index+1];return void 0===i&&(i=n),Math.abs(i-n)>180&&(i>n?i=-(360-i):n=-(360-n)),b(e-this.suma,0,this.segments[this.index],n,i,!0)}calcIndex(t){this.index=-1,this.suma=0;let e=0;for(;e<=t;)this.suma=e,e+=this.segments[this.index+1],this.index++;return this.index}genPol(t,e,n=1,i=!1){te();const r=.5,s=[],o=Math.round(this.length/r),a=new gt(t,e);let c=i?.15:3*kt,l=0,h=0;for(let t=0;t<o;t++){a.plotTo(this,r,r,1);let t=this.calcIndex(a.plotted);l+=r,(l>=this.segments[t]*c*p(.7,1.3)||t>=h)&&a.x&&(s.push([a.x,a.y]),l=0,t>=h&&h++)}return new Bt(s)}draw(t,e,n){Z().isActive&&(te(),this.origin&&(t=this.origin[0],e=this.origin[1],n=1),function(t,e,n,i){te(),Q(e,n,t.length,!0,t),tt(i,!0)}(this,t,e,n))}fill(t,e,n){zt().isActive&&(te(),this.origin&&(t=this.origin[0],e=this.origin[1],n=1),this.pol=this.genPol(t,e,n),this.pol.fill())}hatch(t,e,n){Gt().isActive&&(te(),this.origin&&(t=this.origin[0],e=this.origin[1],n=1),this.pol=this.genPol(t,e,n,!0),this.pol.hatch())}erase(t,e,n){Nt.isActive&&(this.origin&&(t=this.origin[0],e=this.origin[1],n=1),this.pol=this.genPol(t,e,n,!0),Mix.blend(Nt.c),Mix.isErase=!0,Mix.ctx.save(),Mix.ctx.fillStyle="rgb(255 0 0 / "+Nt.a+"%)",drawPolygon(this.pol.vertices),Mix.ctx.fill(),Mix.ctx.restore())}show(t,e,n=1){this.draw(t,e,n),this.fill(t,e,n),this.hatch(t,e,n),this.erase(t,e,n)}}let ie,re,se,oe,ae;class ce{constructor(){this.isClosed=!1,this.curvature=se,this.vert=[]}vertex(t,e,n){this.vert.push([t,e,n])}show(){me(this.vert,this.curvature,this.isClosed).show()}}function le(t=0){se=R(t,0,1),ie=[]}function he(t,e,n=1){re=new ce,ie.push(re),re.vertex(t,e,n)}function ue(t,e,n=1){re.vertex(t,e,n)}function fe(){re.vertex(...re.vert[0]),re.isClosed=!0}function xe(){for(let t of ie)t.show();ie=!1}function me(t,e=.5,n=!1){let i=new ne(0===e?"segments":"curve");if(n&&0!==e&&t.push(t[1]),t&&t.length>0){let r,s,o,a=0;for(let c=0;c<t.length-1;c++)if(e>0&&c<t.length-2){let l=t[c],h=t[c+1],u=t[c+2],f=I(l[0],l[1],h[0],h[1]),x=I(h[0],h[1],u[0],u[1]),m=M(l[0],l[1],h[0],h[1]),g=M(h[0],h[1],u[0],u[1]),d=e*Math.min(Math.min(f,x),.5*Math.min(f,x)),p=Math.max(f,x),y=f-d,_=x-d;if(Math.floor(m)===Math.floor(g)){let e=n&&0===c?0:f-a,u=n?0===c?0:x-o:x;i.addSegment(m,e,l[2],!0),c===t.length-3&&i.addSegment(g,u,h[2],!0),a=0,0===c&&(r=f,o=d,s=t[1],a=0)}else{let e={x:h[0]-d*E(-m),y:h[1]-d*S(-m)},u={x:e.x+p*E(90-m),y:e.y+p*S(90-m)},f={x:h[0]+d*E(-g),y:h[1]+d*S(-g)},x=k(e,u,f,{x:f.x+p*E(90-g),y:f.y+p*S(90-g)},!0),v=I(e.x,e.y,x.x,x.y),b=I(e.x,e.y,f.x,f.y)/2,R=2*Math.asin(b/v)*(180/Math.PI),w=PI2*v*R/360,P=n&&0===c?0:y-a,A=c===t.length-3?n?r-d:_:0;i.addSegment(m,P,l[2],!0),i.addSegment(m,isNaN(w)?0:w,l[2],!0),i.addSegment(g,A,h[2],!0),a=d,0===c&&(r=y,o=d,s=[e.x,e.y])}c==t.length-3&&i.endPlot(g,h[2],!0)}else if(0===e){let e=t[c],n=t[c+1],r=I(e[0],e[1],n[0],n[1]),s=M(e[0],e[1],n[0],n[1]);i.addSegment(s,r,n[2],!0),c==t.length-2&&i.endPlot(s,1,!0)}i.origin=n&&0!==e?s:t[0]}return i}let ge,de=0,pe=!0,ye=30;let _e=t=>(t&&(ye=t),ye);function ve(e){pe&&(e>de+1e3/_e()||0===e)&&(de=e,t.frameCount++,ge(),be()),requestAnimationFrame(ve)}function be(){s.blend(!1,!0)}t.frameCount=0,t.Plot=ne,t.Polygon=Bt,t.Position=gt,t.add=H,t.addField=At,t.arc=function(t,e,n,i,r){_ensureReady();let s=new ne("curve"),o=270-L(i),a=270-L(r),c=L(r-i),l=Math.PI*n*c/180;s.addSegment(o,l,1,!0),s.endPlot(a,1,!0),s.draw(t+n*E(-o-90),e+n*S(-o-90),1)},t.background=function(t,e,n){o="transparent"===t?new r(e):new r(...arguments),s.worker.postMessage({color:o.gl,isBG:!0})},t.beginPath=le,t.beginStroke=function(t,e,n){ae=[e,n],oe=new ne(t)},t.box=function(){return[...G.keys()]},t.circle=function(t,e,n,i=!1){let r=new ne("curve"),s=Math.PI*n/2,o=p(0,360),a=()=>i?1+.2*p():1;r.addSegment(0+o*a(),s*a(),1,!0),r.addSegment(o*a()-90,s*a(),1,!0),r.addSegment(o*a()-180,s*a(),1,!0),r.addSegment(o*a()-270,s*a(),1,!0);let c=i?y(-5,5):0;i&&r.addSegment(o,Math.abs(c)*(Math.PI/180)*n,1,!0),r.endPlot(c+o,1,!0);let l=[t-n*S(o),e-n*E(-o)];r.show(l[0],l[1],1)},t.clip=function(t){D.clipWindow=t},t.closePath=fe,t.drawImage=function(t,e=0,n=0,i=t.width,r=t.height){"[object ImageBitmap]"===Object.prototype.toString.call(t)&&0===e||(s.ctx.drawImage(...arguments),t=s.mask.transferToImageBitmap()),s.blend(!1,!1,t)},t.drawPath=xe,t.endFrame=be,t.endStroke=function(t,e){oe.endPlot(t,e),oe.draw(ae[0],ae[1],1),oe=!1},t.erase=function(t=_bg_Color,e=255){Nt.isActive=!0,Nt.c=new r(t),Nt.a=e},t.field=function(t){te(),bt=!0,Rt=t},t.fillBleed=function(t,e="out"){te(),It.bleed_strength=R(t,0,1),It.direction=e},t.fillStyle=function(t,e,n,i){te(),It.opacity=arguments.length<4?e:i,It.color=arguments.length<3?new r(t):new r(t,e,n),Mt=!0},t.fillTexture=function(t=.4,e=.4){te(),It.texture_strength=R(t,0,1),It.border_strength=R(e,0,1)},t.frameRate=_e,t.getCanvas=async function(){let t;return await new Promise((function(e){s.worker.postMessage({get:!0}),s.worker.onmessage=function(n){0!==n.data&&(t=n.data.canvas,e())}})),t},t.hatch=Wt,t.hatchArray=qt,t.hatchStyle=function(t,e="black",n=1){Dt={brush:t,color:e,weight:n}},t.line=ht,t.lineTo=ue,t.lineWidth=$,t.listFields=function(){return Array.from(wt.keys())},t.load=Qt,t.loop=function(t){ge=t,pe=!0,requestAnimationFrame(ve)},t.move=function(t,e,n){oe.addSegment(t,e,n)},t.moveTo=he,t.noClip=function(){D.clipWindow=null},t.noErase=function(){Nt.isActive=!1},t.noField=function(){bt=!1},t.noFill=function(){Mt=!1},t.noHatch=function(){Yt=!1,Dt=!1},t.noLoop=function(){pe=!1},t.noStroke=function(){W=!1},t.noiseSeed=function(e){t.noise=f(x(e))},t.pick=j,t.polygon=function(t){new Bt(t).show()},t.random=function(t=0,e=1){return Array.isArray(t)?t[~~(g()*t.length)]:1===arguments.length?g()*t:p(...arguments)},t.rect=function(t,e,n,i,r="corner"){"center"==r&&(t-=n/2,e-=i/2),le(0),he(t,e),ue(t+n,e),ue(t+n,e+i),ue(t,e+i),fe(),xe()},t.refreshField=St,t.restore=function(){s.ctx.restore();let t=s.ctx.getTransform();var e;xt.x=t.e,xt.y=t.f,e=ee.field,bt=e.isActive,Rt=e.current,q(ee.stroke),Zt(ee.hatch),Ft(ee.fill)},t.rotate=function(t=0){s.ctx.rotate(t)},t.save=function(){s.ctx.save(),ee.field={isActive:bt,current:Rt},ee.stroke=Z(),ee.hatch=Gt(),ee.fill=zt()},t.scale=mt,t.scaleBrushes=function(t){for(const{param:e}of G.values())e&&(e.weight*=t,e.vibration*=t,e.spacing*=t)},t.seed=function(t){g=x(t)},t.set=V,t.spline=function(t,e=.5){me(t,e).draw()},t.stroke=function(t,e,n,i){te(),Q(t,e,n,!0,!1),tt(L(i),!1)},t.strokeStyle=K,t.translate=function(t,e){s.ctx.translate(t,e);let n=s.ctx.getTransform();xt.x=n.e,xt.y=n.f},t.wRand=v}));
